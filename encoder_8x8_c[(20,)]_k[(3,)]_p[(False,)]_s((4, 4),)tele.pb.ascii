node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "encoder/conv2d/Conv2D/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 20
          }
        }
        tensor_content: "\240Z*>\006c\026\275\312cv=]\262\037\275\021\\\277=\330\342\250=\302\214\276;\265\270\374<d\352o=\277\020=>f\244\250:n\353\322<`F\033>\365\226\272=\270\360\341=I#D>\310\223\227<:M\245\275\274}\"<0\264\271<3\202q>\316$\321=\032\360\016<x\322O\275@\r\250\275\315\362u>\300\002\037\276\237\256\221\275\231\360&=\001\026\021>E\326\251\275\t\227z>\216Zk>\211\212\360={\262\343\274\021a\374\272\354\262\002>\275\236\314\275\211\300\014>\320B\322=\334b\306\275\3342\312=b\226\323=\345P\355\275R\027\224=\226n?>\352$\003\276\250\207\270=v\2375\275\215\'g>\374\"H>\207\377\024>^\277<=\\\017\301=\016\004\212\274%q\204\275\302=z>\020ao>kl\216\275E\263:=d\371\\>\301Qb>ig\001\275\017\223\271\275\316\201\367\275`\034l>\272\213\333\275\310\261]<\307kD>\220\201<>\026\244\t\275\027\356\347<\"\2066;5\036\227=\356\317@>\201\224\242\274\016\241b>\213\244\322=i\217\366\274>=\000>\344\033\0039\315\215\256\275\205\0349>\242o\262=3\203\317\274\370q\307=\3727G\275\360\251T>Z\376\321\275\002\317S>4\337m>\326Hc\275,\0161\273\004k\035\276\354~\231<\236\211G>\245>K>\331Qy>\225\244\035=\026\350\020\276\241e\330\275\255~1>\332\2376>\372\220R\275\226\006\361=\361\031O>\340-\307=V\363\030<M\377\367=PVP>M\300\276\275\355W\006=hf\344=\377\246\312\275\\\375h>\243\321\316\275\255Yn<\236dd\275o:[>\346<2>#\203\304\274\rt\213\275\347\374\033>\033\234\207\274\215\005\224\2740\355\303=\262?\376\274\314\242\374\274\372\203\321\275p;@>\034\377/\275\357\261B>c\203?\275\326+\312\275&\302\036>\304\307#\275$\316\305\273\332/C=0+J>\030\r\325\275\r\234\000\276?h\342:(\230\026>\2350I=\232\204\027<t\343\261<\367\256\217=W%\325=\242\374\026>\213\033\311<\356me=\217\263\273\275}\372v\275\177H \276*>\221=*:\007>\034\263/>\327\276\020>\024\245|>\031\342\363\275z\016\013=\351\nH\273\262\267\205;\215\"\360=\235Vu=\277\017\264\274\014Qr\275,<P>\355(\013\274\341\247 >\"\251 \275\3010%<\3266\370<\226\330$\276\177(s=\306nx>\362\021\203\275\325\223V\272\377T\r\275\0100\334\275"
      }
    }
  }
}
node {
  name: "encoder/conv2d/Conv2D/ReadVariableOp"
  op: "Identity"
  input: "encoder/conv2d/Conv2D/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/Conv2D"
  op: "Conv2D"
  input: "x"
  input: "encoder/conv2d/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\274\226C=\303\267\260=\177\231\246=\271bM=\246\220P9\355{\257=\206\375Q\275@\263\244=~\'\206=\nU\240=\236\317\"=\301D\237=U\271D=Z\022;\275\303w\243=\215D\251=g\022\243=\235\273\241=\262\302\240=(\007\"="
      }
    }
  }
}
node {
  name: "encoder/conv2d/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/conv2d/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/conv2d/Conv2D"
  input: "encoder/conv2d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/conv2d/Relu"
  op: "Relu"
  input: "encoder/conv2d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/flatten/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377P\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/flatten/Reshape"
  op: "Reshape"
  input: "encoder/conv2d/Relu"
  input: "encoder/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
          dim {
            size: 16
          }
        }
        tensor_content: "A\221\314\275\360\306\224\274\334\253a=/<z\274\201\004\210\275\225^\254>\366\340\203\275CiK>\027!s>\326<\031=+\362v\274\224\2234>)20>\032+\244=\004\1772\276\034.\241\274V\302z>\\\307\350=L\2017\276%\327e>\370)\'>r\234I>\263.W>\303\202\313\275\2332\204\275\213\376*\275.\312\332=:\\p>\252\374\263\275c\213)\276\361b\352\275\370\303\"\276\036\001\200>\352\375|\276x\364\004>\250B\037>fP\267\275\014\232\303=\024\002\203\276\314G]>\370\373\254=\245Nq>\222Y\206>\203\261O>\035\216\305\275?\247&\276\316Y$\276\312\224\207>\021\251M>\007\212m\276\215\362<>\243$\000>8t4>c\034\023\276\304\354\326=\264\364\200>\234_T>\021;\267\2743\201\253<A\006\320<\215y;\275Be@=\320\307\204=\001\237\226=\235 \023\274g\263G\276\336^s\276\250\274\362\275\240V\325=\004J\226\274X16>>\224\360\2743\000\331>\366\233\006\275\213\227t>\264,\032\275\2041\"\276X\356+>w\300\302\275D\252\275>D\267W>n\221j\276f\2428\276BUw<\363g8\274\363\023\317=B\316w\276\023\370[>\2663\351\275\"\254\220\274+\261D>\023\022\254<\244\356\">\361w\310\275tb\213\2733\3646\275\301\035@>\201\300\016\276\355f\337\275?(2=\237\2745\275\261\257&=\345\032\315=L\014<\276\370\342\005<\023t\204>\330\262\214=\226\367\006\276\'%\221>l\352c>\034\337/\276q\333\036\276p\274\364=\224\013\326=\363\267F\276\203e\203>\005I)>\016@\272\274\272\271E\276\346\300m\275\313\007\233>\222.0\276\243\227j>H\242Q>\217\326\245=\322\263\301;\232r\244>\215Y\263<\203t\013>\036@)=\231\270Q\276\177NT\275\200\203\216\275\013c\263<>\310\307={\267\226\275C\313j\274\007\016E>n\336b>\263\351\260=W(\030\276\326\371\257\273\032%\211>\242S\304=\005\273\273<Z\032\252=\232>\010\275\306\312J>\343i(\275\222\205\275\273<20=\266\245\277\273\240\017&\276\271\333->~\325\210\275_\220\202>>y\000\275;\372:>>\375\311\275\275@u>i\320*>\023<d\276\232\374\210=\304@\263=\265Pv>\225\242\305=1~\332\275\3151\224>\027$|>=\264\023>j-\354=k\3402>\263\243\234=\214|\037>\273\024\245=\235\343\360\275VTe>\007\277\\>]\366P>=G?>\344%\243>\312\020\020>\260\372\216\276\236\350\317=\354\367\014\276\356\2203=\300\306&>\307\362,\275\'l6=\r\004\237=\217T\225>S\222E>wN\346\275MBj\276\002\r\026>\226V\314\274=\320\026>\332h\037\275\314}4>\2704\016\276+\230\327\275\003<\211\275\344T\360=\346\204#>z\'n=\342\230\211>\232\317\220<\363E\201>\"c^>\244\007\037>8\351\032>\2618\240<hu\024>\033\336\033\273c\377S\276\361z\035\276\033\272\202>\341\013\003>1\356\331\275\310\317\026\276\327\345\376=\254\261\334=a\r\234;+|\215=\300\256\232>X\356\352=\336\2741=\260/\231>\037X2>k\246A\274\0259\327\275\202\235e>\t\274h>]\020\024=`\271:\276\226\224\205>\372\274(>\023\'B>\002\005P=\021Xf>\310\234\326<6\264|=\304\302\270\275\007\255>>\342\022\363=C\354\'=U\241\200\276\027j[\273\261\317\232\275\251\240I=\275\013,\274\212J+>3<\222>\375\352\'\2763l)>)<\200>>\345]>k\031\033\276\202~&\275\351l\'>\220\010J>f\346l>f\2463\276\013fz=\334\361\276=K\326x\2752=\216\275&=A>\355\274\230>\336\310t<\353\r\316\275QPw<\331`\227>bv\353\275\030\336\242\275D[\313=q\247\';*\275U>\254\254(\276\377I\006=\273t^>*Z\242\275)\225\'>\2367\323\275o\223\252>\233\266)>\304s\254;\265\203\205\273\306;f>\207\314\021=\325\371.\276\354\3103=\360ik\275\010\363G>\257\265y\274w\r\241>\234\301<\2751~>=\357\2659\276|\322\037;\271\027\021\276\034\236\206>\227\365\212=Xk\347\275Ysd>#\022\026\276\233\261r\273\342\231$>\206\007~\274\204\332G>;\255S\276f\354\215=\013.\026\275u\207\303=\365\271H\276\343}\251\275RqX=\rKP>]\002\'\276%Ad=/\027\252\275\274@\020=\201\242\006\275\302>A>\333`\001>\260\261\310\275@\246\262=\022P0>]<\224\275563>t5N>\353\013e>7\243\035>\353 .>\256\350c=\321\372\024\275\271\342x>\020\240E>\327\265\243=\315\357\246\274Z.b\2750g\002\275s\217\327=gB\324\275)\227\271\274C\006\236\275HqH>\270\302\330<\026\253\023>\026\002Q<x\340\177>=\2714\276\013\017\220>\354\023x\276\317\375$\276$\2102\275\300\305d<~\235\220>\206>\206\276\245\326\032=\014/\267\275\363\036\322=\'\267\271\275n$*>v\356A>Ar:>\'\367\277=\237KI\276\034*p>\273\227\322=Fxh\275\226\361<=\353\315E>\000\302\233<\224\220z=\251\344\311\274\232f\200>P\257\202\275vwM>\035\"\344=\3301\231>Y_\370\275E\254\223>\377\370\024\276\347\261\221>\272`\027\276\377\201<\2768\002\306\275 \362U>\365z\203=B\013\370=\375O\326\275\267\342\362\276`\211\306=\355\314\247\275\340\034\332=8\367\036\276!!\205<\361\225\021>\023\020>\277\310\025\214>\312\364/;\005q\225<\331 \317\275\035J\310=Y\206\367=&d\375<\236\331k>\254\201\361\275\340\350*\276)?\333<\206\232\004\276\2310\203>\271\376\227>\202\005\314\275\346w\031\276\005\313\276<\256\2301\276\017\370l\276+{\332<\032\220\003\275\316\2361<LQF>>p[\275\204\262\261\275S\026\360\274r\251\020\276\322\013\234>wB\350\275 \354\r>$\377\227\274J\'\347\276\215\377\246>\374>V\276\022\347\242=\264\372$>\371^F>\224\270\240>\351B\362\275\026TG<t\323\321=\nS\304\275\242hy>#\333\330=\"<<>&=a>\330\355\026>_\343\365\275\n\376s=)\027A=B\375(=\007+j>n\0108\275\010\006\">\335) \276\034}\373\274\177r\025\276\017\374#>\234\363?<\201\016\270\273\353\326\021\276\223\322\275\274\031\362\263<\304;\231=\027\272/>\277\255g>\352\267\366\275;\364^>\323\035\244>}\202K>\245\231\343=kk\002=\023>\320\275w\252\361=\271\372o\275n\331\251=q\222\035\276A\022\004=\212\3314\274\276Ql\276aPu>sya>\314\207.\276e\354\330=\016&\273<\365\344&>6\254?>\353Y\202<b\026\200>,\032\343\275N\314\022=\262{\021>=P\320\275d+}=\375\200\243>\341\272\233\275\036K\230<\357\265B\275x\227\232<\375\266w>\"I\205\275\241I\036\276!Q\n\275\231\226\220>\023\003\223>G|\213>\306L\327\2751\266\232=*\226\231=\273\237\021\276\206\332\347\275\323&J\276\321=E>\005x;<\345\234/=\t\004u\275\236\355H>f\207\371\2753\203V\275\376(J\275E>\224\275Vx\325=j\340{;2\023h>0A\333\274?B\r\276\322Y\267<\233\315\275=J\377\325\275$\005\033=\222\031W>#\266\006>E\030\033\276xi\316\272#\223c;\314d+>a\304\360\276\305\213\327<\361\341\211\274\2713\256\275{\272\032>\031\000\'\276\215\351\021\275\353*\213\276^\213\030>\353\2124\276\036\317\221\276\"\034\245>\214l\234>g|J\275g\002\242=\323::>\231\0264=N\024\036\276\311\351s=\234\375\241\274\215j\003<8/\214>$B\231=(?&\276\234zC>\220\200\n\276;\232;>\245\032\327\275@<\331<^\254\222>u\303\235\275\247\017\216=\325\270\203>\232\266\033><\277\303=\370\262\235>\224\201s=Y&O=\331|\336\275\010\211\231=N\217F>O\321-\276\\\037\360=&\330\236>G\323\023<\200\351i>\014\201\335;\237\243D=\r\266?>:\374\007=\335\020/\272\2239\246<\332\221\215=4|N>\025\260\224>\332A\306\273\230\342e>\006\006\007>/\232\214\276h^U>\247}$\276\210\246\242\274$\024\370<\352\316\235>\317H9\276\003\333\031>0\351\021\276,\271\224>\307\200\252=\374\240-\275\264T\030>\366\030\332=\016\336\226>\014\367U\275\340i:\276 \257?>N\242%\274;\230l>gwb\276)\005\216>\'\323\177>\350\035}\275k\222d\2730\265a\275\241\203\327=\005\336\365\275\257\252|>\341}\260\274\212M\210<\302\014\207\275\213\215\230\274\035\266\377\275d\273\003>tB%\276$\320\343=\206n\035\276\227\302\343\275\273\303a=i,(>\260T\203>\031\2240\275\321\233\217\275\007D\231>\001\024\257<\313\230\266\274\232\014=\276\237\253\204\275\254\177F>\255\014\214>\214.\013\276\203\347*\276\367\025,>D\277\021\276v\343\257<\336!\332=v\355\200=\242\235\004\276\235\270/=\270\010\n=\3730C>P\327I>BT*\275\'\265>\276VQ\024=Jf\210>d\370$\276\330:f=\246\362\315;\367\035@\274\007N\212>\352{A>f\211\t\275\017E\023>R\006\262=x6i\275\331\341\203\275\211\013Y>\327k\034\276\255\355#\276\324`\221>u\243c>\311\261\024\276\351\3318<\224\377\014\276X6C\276\233Y2\276\205(5>\024I\223>=B\331=\243\355r=\325\307\240\275\251\273\333\275\371A\257\275Z\025\256\275q\014\030>\246\370\2247Q\364\214>\370\311\006\276\362f\365=:\264\333=Y\006\014<\372\353\034\276\376\301\r\276\027v\207>\245\212\206>\373E.>\304R\230>F@\230>Q9~=\273\256\303=\221\244\022\276\333\036T\274f+\023\276\326D\035>\010\323\022=2*\257\275Y\255\275\276r#\177\275\376Fc\276x=\214\275\343\250g\275\025\216\324<\316\322M>=\003\227<\210\nw=\277<\201\276\365\316\207\276\201\023?>\034Q\265=\310\326x\275\355#\021<\021t\233>q\305\205\275{^\007\276\014s\235=\021C\240>\314\2046>\262\200\246>\031\354B\276\020\242\212\275\020\370*\276\365qM>\021\270\344\274\236\254\r\276\003[*\276\375\273\357\275\254\371\006\276\366?\244\275+H\314\276\010\257\346=~7!\276Y\207\275\275\212\340\014=f\3607>\204E\031>\004%G<[\010\304=- w\275\306!\224=4xL=\241?}\275~\023\214=0\326C>\247;\027>\243Y\211=O\013\277<\274\371\225>\326\357\257=\032\225\327\274\035\346\220>\000\'\366=%\026\314\275\236\265\214>\275\010\366=*\257>>\205)@>\332gW<vw\206>|\372H<$\242+>\"YI=\273\240@\275\251\212(>\327\260\204>q\224\003\276\016\2470>*\014\025>u\230L\275\026IC>q\314>\276\010\230Q\276\307\332\233>1=\241=cK\023>\360\344+>\r\370,>h\rR<\321\007f\275t\316\247\275Xs\036>,)\241=\274hv>r\272k>\277v\025>\033\211\027\276\371t\024>P\267\207=r\266#>\217\224\223>\316\355B>\312\214\341\275\0258Q>\210\234?=\304\203P>q\301\025>&AM>\213\300n>c\224i;\304qI\275\2238\327=\215\'\223>\013&\241=i\221 =\202\203\320=\2076%>S\322\324\274R\251\036\276B\333\242>\207\261\022\275\023\233\212=\206N\031\276\357\355\t\275\372\317C<\340\230\261\275\246>\004>F<\025=q\326s>\320\242\343\275\356\234\226\275J\242\034>\'a\202>\314\311\255=\025r,\273\357\357\225=\253\315b>\242\010\305\275\t\324\007\276r\236\204<\322\346m=\374\005s>\017Br\275`\346L\275;\217\036=\337:\014>\211\361\000\2768\255\202>\231\346\212\275\346 \245\2751\021u=D[y\275\310\326\020\2777\344\024>\023\n\r>\341\340(\276A0%>\270\021\330\275\026m\366\275\275\3202>$\306\030=E\213\315\275\265\211P\276#8\222>0\002\220>\250\222\373=\307\376\227=PP]\275kXK\276p\350\217>j\377\034\276\257\263 \276-? >D\374\207>\212\207o>sx\221\271\215!\037<\2704\331\275\201^\213\274Q:\300=\326\340\242<\264\036\240>r\242\377<&\035n<\261j8=\352<F=\253\037\004>?\245O=\275A\217>1\027\317\274\340\030\364\275 \303)\276\202\n?\275\322[\004\276\033\306\237=\216\'(>\010 \333\275!\264\233>\245\r\206\276\204\265\376\275\t\370\002>\362\001\t>\265\266\303\275\250\367\304\275\327H\306:\314\232\375\275b\355\003\276\\\274B\275\367\246\014>,\356<>=\271?>\311\221\335\275\346\010\323\275\332\245\237=\212\273K=W\261\346\275I\310\010>\237\312j\275\342\245e>\253\224\312\275\202\370\354=\315Y\025>\324\365\345\273\276\201\220<\254/P=y`\366\274Q\200\n>\246s\357\275Z\303\316<\224\3250\275v\252\036>\024\245c>\240\010,\276/*\016\275\204V%=`f\201>\326\2033>\332K\234>\215j\227>k\320\370=QM\370\275\301wx>\371\r+:\007\303|>a\316\250>.\372v\275#\303\030>\375jO\275\257va\275\314\354\200\275\350\245\210>\0046\022\276I=V>\ti\226=\233Q#\275\276!\267=\014>\206>B\363C>&\214`\276g\2156\275Dfr<\034\363\204\275\2728?=\363.\331=\233w\213>\'\362m\275\367#\362=\260\352\031\276wA\"\276\202z\221>\003\265~>\261Y`=\031\355\007>\231\243\303\275\003\354)>\022\326\272\275\237\247\317\275c\302e>\274\\\234\275\266\234U>\255\232t>\332\023\217>eeX\275WU\304<x\273\202>\3049.>\341\223\t>vY\">\353\323\243\275\235\302\007>\277\000\027>\232+\214<j,\203>Z\212\215>c\226\377\275\030\\\240<\372\237w\275\264\330K\273\335X\273=\245\225\352=)@\242\272\357\264\301\275O\274V>\304\257V>\341Qo>\300aW>\006\367\220=\343\302\267\275wx\307\275bC\323=\207\225:\276{\240\352=?h\217=K\205\312=\366A\211\275K\277j;\336\370\244=\177\340\017\276\277vi>\333\007\333=\3670\366<\240\362L=\350\236\305=S\323i<\r\010\265<\205\251\335=\301\267\241=\245\002\017>\216\323e\276\3032\200>*l\302=\226\213M\276\305-\376=\003\366\323<\234\314l\275\236\206\034\276\032\236\260\275\336===\224\2779\275\236r\t\275\347E\212<\341\304\032=q-L>Qs\223\274zN\003=TZc>\217JY>\207\013\233>\245>\363\274\236\355l>\000V\226>]\020\322<\"\311x\275\264\013\352=H1\370\275\022\rP=fGR\276}E1\276\020#\240\275J\3514=b\263k>\375\\o\276@\263Y>\232\373d\276SW\241\275\234\353{<\325UD\274\330/\364=`|9>\307\250M\276\t\013X=v\017\350\275\242\003\033\275\026^\260=?\032B=)\0167>\273\374\212>KC\366\275[\211\227>\373\000\237>ytf=w\014\013\276\217\353\375=\341:\236=\341\035F=\300\212D>\322\346\204\276\335\366\230>\314\305\035\276\027\006b=\032h\026\275\324\027\023>fc\213>@(\210\275\207\202|>\343\310\352=mq$>\'\205\372\275k\367\244\275\340NA>4\'\026\276p\207\007\276\034p\324\275\351\270\220>\202o\341\275r\237\206>\240\025<\276YF\313\275$PC<\350G\005\276\032\200Z>\344\003\033>\320\223\212<\004\302z=\013\362\347=\243\225\230>DX\241=p6z\274\331\024\316:q~\037\276],J=^\247\t\276U\177\275\274c\273]\275\270\224X\275K1\007\276W\334y>\220\377\315\275h\0160\276\237\241*\276\375\016\313\275\n\366\344\275\247\360p=\034\236\001\276Z]\301\275j\305L>\234\3260=\316W\343<LO\026>j\375U<\276/\230>\344\266\211>\307\264\201>;\376u\275u\317\247<\337;{=\r\033\347\275\313\267\235\2750Z==1\267\000\276\322\340\010>\007\213\250\275\301\r\362=\370\233\310<\342~\005>\241\272\221>\3336A\276\205^\226\275\034&\334= \337\350=RpB\276\013\227\016\276>\212\">\035\274E>\370\005\257=\200Y\211\275\200\263\263\274\324\303\030\276\210\274\310=h\014\260\275`\313\027\276xp\243=\324\311.\276\344\220u>x\336\n>\300\224\032=4\232V\276\014\237\014\276<6<>$\305$>lz\243\271oq=>\372#\345=t\371\331\275\021\323&\276\356x\261\273\225\367A>\"\231\304=)\336\246\274\217wr>\362\003\031>X\246\240=)\307\233\274\2059\224>\372\037\305=\372Y\243>\266~\r>\364V@=\370UF>\r\215\031\276r_\214>]\222@\275\034)\311<k\010<\274\256\3118\276\331\322&>\022\2637;\324D\205>\236\020\016>)\036\235=\326\031\004\2754o0>\007lW>t\314K\275)\373\021>\210\222j>~)\023\276\305\255\267\275S2J\2764\252s=\264\337a>Z\354\347\274\017\363\227\275P\327%>\241\330\303\2758\214M\274\217\330X>\205u\233>v\274\215>s\231\024\276\361e!\276@\002#>\371]p\275O\346\215>\332\361\032\276\364\306\202>\262\210\'\276b\221{>\201\306\260=t\275\023\276\027\252\200>\337\036I>z$k>~\204\313=\274\210$\273\277\201T\276\345\325&\2764\"\004>C\255U>X\355\344=2\361\024>\261\242\361\275\232dK=\351?\203>mE\312\275\260Y\020\275\333\336W\275\264n?> 8\220=\272\254\036\275(\230K>\340\224U>P\320\257=i\'\225<\257\315\371\275\204G,\276\3436\350\275\303\\\363<7YW>\355\010\t>\332\326\001\276\303\336\350\274.,\216=\221]I;s]\201\275\360Iq\274"
      }
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul/ReadVariableOp"
  op: "Identity"
  input: "encoder/encoded_vector/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul"
  op: "MatMul"
  input: "encoder/flatten/Reshape"
  input: "encoder/encoded_vector/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "y\264\230=\260\2604\274\226v\021\275\3003\225=\010\342\245=\340\346\231=\304}\354\274\356\356\223=\313\253\032=\214Zc=G\3259=\254\335\250=,o\247=0/\250=\nTt=gz$="
      }
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/encoded_vector/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd"
  op: "BiasAdd"
  input: "encoder/encoded_vector/MatMul"
  input: "encoder/encoded_vector/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/encoded_vector/Relu"
  op: "Relu"
  input: "encoder/encoded_vector/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^encoder/conv2d/BiasAdd/ReadVariableOp"
  input: "^encoder/conv2d/Conv2D/ReadVariableOp"
  input: "^encoder/encoded_vector/BiasAdd/ReadVariableOp"
  input: "^encoder/encoded_vector/MatMul/ReadVariableOp"
  attr {
    key: "_acd_function_control_output"
    value {
      b: true
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "encoder/encoded_vector/Relu"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 1087
}
