node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "encoder/conv2d_2/Conv2D/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "=z\311>\311z\006?\310]w>9lF\277\203&\246>fU\272\276\267\2364=L:S\276\010\230d\275UR\325>\2529[?\311\033Z\277\263\267\211>\215\276\246=\313FQ\276Z\313\010\276\273\n~\276l\001\220>\350\031r?s\302 \277/\220\334>\017\310\220>\"\264\204\276\023q\311>\031\031\010=\033\332|\276\240\222P?\211Z\221>(B<?K\204\005\276\340\'\200\276\322\250\017?F\246p\276\203\350\251<\324\265_?\364\336}?\253\0073\276\370\005\023>J\210|\276~Z\312\274\346\2023?*\'\243>h]q>3.u\277\244Lx>\037H\356\276\261}\232\276\223\034\375=\241\340\360=\236\261I?\34694>\217\013/\277\'^W>\234\234\343=\250E\315\275\326\335\272>\223\024\203\276m\227\025?\363r>>\376\004\221\276#\361\013?\235\335\202>m\200\375=qA\032?\222-0>\363\323\272=;\317T\274\022\262\014?\307`L?s)L\276\276\335A>\3540\'?\247t\341\274\277\254\207:T\373\313=\203\300y=\265f@;\t\010`\273\212%\300\275\366=\241\273\020VX?\241\315\242>\275u\257\276w\316L\277\0256Z>G6\344\276\001w\036\276\363\037\002?,x\241>\0142!?\217m\236\276\263\361\033\277k[N>\351\367\312\275I\263\376<0\250F?\310\362\212<\'\361\002?;~\257\276\30456\276\210\035\257>\313\351\035\275\205\231\026?\325T\357>Ib\351<w \217\274\253\002B>\367\035\022?\326\236\252>*\025/\276\332\363%?K#\302=C\265d>GzZ\276\220\305\243\275\322_\223\275\307F\273=\250o\252=\211b\206\276\376\271\014\276Ee ?\241#6\276\034\000\276>knO\277X\026&\276\273\220+\276\005+\220\276\247\260\016?\247\264\301>\232q(>h\231\354\275\033<\027\277\275\253\362\275\214z,\276\215N\\>k`\r?\202\025\027<\371\362C>\240d->;\214\314\276\257\246-\276d\224\241\275\324o&?\237\302\255=\325\227W=\203p8\276\357l0?\215n\010>\034\342H\276\211\003\207\276\255\'\024?\274J\323\276\302\320\333>\326\221Y\276h\276\236\276[\213\335\276\203n\373=\243p\014?\201|H\276\322+\234\276[\242\327>\314\214\267=~\261\000\276X\304\275?8Wc>\303\252\343\276\201\020Z<\217\016<?`\017\005\275\301\342\006>o\202\367=\014`l>nE\314\275\245\376\017\276\305\220\035\276js\220>]`\215>\177\201\013\276$2}\276n\203t>\201\262\271>\307\254\253\276W\243.>\323K\374=\001\007\220\275\330\355\340=?\301%\274\002\031\256\274 \225\232<\335.\346=\355u\026\276\341\026\001>8\233==\272J\031\276\321\000$\276^\036\n\276\tO\260\275\020v\312\274\310\354\010> <\353<"
      }
    }
  }
}
node {
  name: "encoder/conv2d_2/Conv2D/ReadVariableOp"
  op: "Identity"
  input: "encoder/conv2d_2/Conv2D/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "x"
  input: "encoder/conv2d_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/conv2d_2/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "a\334m>*\021w>v\003\221>-\t\371=\302\261\203>/=\316>\324Q\236>\277\267\262>"
      }
    }
  }
}
node {
  name: "encoder/conv2d_2/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/conv2d_2/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/conv2d_2/Conv2D"
  input: "encoder/conv2d_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/conv2d_2/Relu"
  op: "Relu"
  input: "encoder/conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/flatten_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "encoder/flatten_2/Reshape"
  op: "Reshape"
  input: "encoder/conv2d_2/Relu"
  input: "encoder/flatten_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/dense_2/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        tensor_content: "j\252\241<\225\no>}H\216>u}\223\276\357\270\004\277y\263\243\276\343\225\241\275z\022\251\2750`\316>\3436\002>rcU={i\025\2760\227\006=\037\262\223\276\2421\240\275\234\310l\275\316\364\207>\177\033\252>\342\016\017\276\303M\005?P\351X\276\374\322p\276\033\007\352\277\335+I=\240(\033>\254W\\\276E8\207\277\370s\265\276\371>\217\276\311@\013\277\306\035)\276\247\213\305\276\275\2662\276\3036\373>\034\321\213>\\d\334\275\023{\274<\207D\366\274\032YL>~\245R\275L\344(\275&\2446\276\027\025\223\276\245\327\005?E\231\216>\327^\270>\031\255\031>P\355\371>\005\354\256>\261kd\276\273_H\276\231\270P\2766\311\300\277g+q>\3449\231\277`\224\023=\032bG\276E\034>\276%BQ\2761\207\300>\302\327T\277\265\311]>\265<\336=3\205\210\276\373\333\214=%\325\002\277\202\267\342\275\"\352\341\276\t5|\276\275&\233>~j\214=\331\317\014>\n\263\216>\311\331k>ER\216\276\025\262\036\276k\021\326\275\3451\251\276\370\376\204>\327\301\362=\343\323\334=4?\267>\336|\204\276\233\026\212\277:\001l\277\252o\216\276\2541\027\276v)/>\035 \203\274\037C2\275\211\037\014\276q\335@\276\216\322\022=\242\214\204\275\210\233\260>\335\200\363\276Ds\335=\250Y\035?N\226,>\251\344\374>3\214\226>\023\250\020?\225RK\275\230\363\336>\272k8>\375\017\022?\374;\317\274I\343\236>\305\336\213>8\244.?e3\356=\177\203\010>\357U3\275\331Y\336>.\352\006>n\\l=u|\372>\277n\313>g\247~?\273\272\270<\031\'\311\275\204\236\246\276\376CW=\347\334\266=\201\265&>C8\025=\263\203A>\264\332@>\365\304(\276\267Y\374\276u\'\361\276\265\317T\276\316\311\371<\312\304\007?\337\270\027>\356\207\002?}\010J\275j\203:=]\200`\276J\n\307\276\0064\221\274I\320\363\276\336\200$>\326X\263>mR\257>#\016\000=\330\007\027\276D\364\322\277\241\361\303\277\020\314\n\275*\347\">\0209\265\275>\272\311\276\025:x\276X\214\326>\324KB\274\375\372\353\275\\\245H?\275\335\304\276\371\0235\2761\331\216\276\340g\001?\332 _\276\035\357\331\275E\277\326\275\021\367\314>\324\004\216>\352N\315>\305W\346>\235\334\016?=\357X\275\240\313\267\275\314\220\245>jU%?w\356W=[I\262>fC\212\275Rm\242\276O\362\306\275\036\037A>5\233 >\255r$\276\027\327\177?E\202)\2754\206\242>\036\3000\276\216\313\004?==\201\275\331<\252>\022\366\245>\271\356\224\276~\272\031\276E\232\025>|\353j?\346\243\267\275<\354,>\222\263\021?\027w\213>\236O\026</W\207>\203\205\200>k\221\335>Q\301#\276N#j>\035y\036>-\377\265>\014c\305\274d|\000\275\367\034b\276s\224!\277V{\231\276\317;->A2^\276K\302\276\276\275\313\320>\261\370?=Z\003\035>\014s\311\275D\002\324=\325\004,>!\265\024\276\315b\254=}\370\303>0>\305=\222\375v\275c\302\334>\215\350B=\034\313R>&w/?\207B\013?\266\343\215\275?j\203>\374\007\304\275r5#?\233\370g>\331\\\n>\007<\000?\245a)>N\024\337>[\201\250=\356w\261\276\314\177D?F\321\352<G&U>\250\"\205>\255W\203=\252\207\364\276\320\337e=\273\223(=\200\242`\275\324\253\224\276;\027U\276\021/w>[E[\277y$\014>l\036\273<\226\024\006>\262\272\010\276\374;\341=\357\330T>vX9?Ve\363\275.I.\276TL\002>\350v\313\276\345fE\276\032kA>[\331\320>\343K\220\276\020\321\t\277\322J\306\276JMB\276\224\372\226\276\327:\367\276\336\231\237\276&>\233\276\367\025{\275\306\316E=\377\327\216>\311[\242>z}\013\277\266\364\220=\246z\332=\267\005\001>O\216S=\202\267\036>\013{m>fE\213>\274\246a\276\362\321\031\277X\335a>\203y\351\275\277>\326=.\253\336\275<\376[=\224\263\214=\275\213\032\277\344\322R<\212F\'>z\255i>\370%\370>\233s\311\276\177\265n>\024oi>\024\026\364\2769\255\200\276\256\004i\276\\M\220\275\247\007`=\376\337h\275Z\267\333\276@\245\023\276\3055\315\276\337\347\214\276eN\003=\311\003!\276Lp\226\2757\367\261\275\251\006\025\277f@\010>\274\305\350>\001:\250\274r\273\256<\177*X<\025\2121?\253\325\261=\305\016\340\275hK\000\277%\2432\277\302\016\242\276/F\347\272\214\304\025?\257\237\035\277l\350\310\276\037\270\242>\000\"\020>\370\346\340\276~\234{=\036\027\347>\020(\t\274\260\033\360=\365?\346=\210\303\253\276\311\275I\276\225E>>\026(\216\276{\301\307<\0242\300>\201\317\001\276\010Qd<\241\330=\277z\'\010\277\356\322\201=E\210\\> \"z\276Y%\007?\364\235|\2767c\366\275^\0363=\345\261\002=\r:S>\001P\240>\335\227\314=\343\266\267>e\263\263>O\031\t?[\353\356>\314 \375>\020\2170<rqB?\321k<>\247\243X>:.\307=\311\372\232\275\362\357\277\275\307f\231?\356*\370>\261OH\275R)\262=8\205m>\315H\210\276\365t\024=\021\234Q\277KD\t?7\354.=\304-\306>\321~\235;u\334!?z\t\022\274i\217}>W\344\316\276\245ud?T\267\212\277\335l\231=\232\303\245\276\250=\034\277{\226\232\276//\310=\364t\004>\3270\'>M|\256>AB\362\275Z\221\235\274\356(\223\276\237\302\026\275\"u\233\275 \261\203>\326\235\344\276\331\023|>\262\377\261\275Lk\256\275\004\300\321\276\252*\202=\035\263\254=\351\n\303\277\007\'\024\276\316\327\301=\0177V\276\307\016k?a\336\265>\342H\224>tN\016\276\312n\255\273?\320\023?-\006\201>p\207\220\276|\233\014>|u\312<\307_\212>\255\365\274>)\206\307=\332nR>\026\261\343\273\356O\361\274\201\222\225\276\362\377\356=G\263\030\276\317\317\006>\023\203*>\306&\023\276\267k1\277\271\335N\276\274\"N>e\305^=m\252\325>}\004B>\030>^\274q\255\024?\006\000\200=\037\262T>L\277/\277<\032\222\275\032S\357\276\0025\330>q\363\360<\022O\202\276[m(?\352f\300\275\002\303f\275\270GE?\355Q1>+gY\277J~\230>k\367\321\276\220X\224\274\342(r=\346\030a?\260\247y<\027\031x=8\331W>\350\225\316=H\302w\277\213\017\n>/.h\275\233\320c=\021\344\324>\316\333\036\275\322f\227=\301\224\310\276\236\017 ?\022\236\n\277<\210[\275\222\234\337\275\024\271\177\275\342\266#\277Y\'\035\275Ae_\276wb\225\276\262\215&\276\227\r\273\276\256=j>\376]\362=\212M\036?\372\344\365<3\205\315>y\337\250\275\023\363\342>\364w7\275\373\"\300>\341-\255>\372\202\257=<\232\033>\001\375\363\274\017\035\t\277\2349\240\276n\343g>\010\347\205\273DL\232\274\223\004\207=\341\217\371<\274\3713?\2559\035?\340\244\260>\256\325\236>\210*\006\277|\216\371=\003\036J>\226\342.\277\0000\220>\021W\343\276\023\273\010>\202\250\346>\036NW\276\341/P\277\246\007\'>\213:W\276{#\003?\365\264h>O\264\360=*^\220\276\330\362\203>\365<\224=\344\266\031>L1\364>M%\031>\373\r\350=\215a\256\275T\320\356=\303_9=o\204\'>\006/\325>}Q\026\277\334\201\255;(l\336\276@\327\332<\036=\251=\343\245\220>\207y\373\274\320<\320\276\nU\233>\347\036\017?\257\235\363\276\251\331\206\275\250\231\037\276k\033\243\276\2564\221<-q\317>,S\304>\020>\372>\0351\211=\330\335\256\276qjF=\246\0254\276\327\226N=f\002\365\275\237_\244\277\3547\227=)\275\262<v*\371<\302\222\340=@\002\235=@\036\215>|c%>\362\261y\276v8\347<\275\323\247\276\222\000j\275xU0>\231\316\235=\263\327]\2752I\320\276\364\221\243\275p\026\327=\370m\252\2765\035\035>\033x\t\276^\276\314\276\214\030\333\275$\267c\275<\321\033\277\307\222<\277~\276\340=\210V\277\276.\004\'\277&\203\276>nr\006>}\013?=\313\007Z\277\034\017==\267\245b>m\t\231>\3429\213\276q\226\342\276\347\356\366\276\356\322[\273|YN\276[@;\275A]!=\254]\331\276\250\306[>\360t\234?\374\321\334\276\314\303\231\274~\362c?\030\017\330\276w\252u={\r\232\275\200\236\205>-\254\341>\350x\030?\222\351\022\277\277\007\333=\367\253\313\276\342.\023?\224\363><\2413$?\241\215\215=_I\200>\177\025\325<\302\346\363\276\310\363\207>8\300\026>\235J\214>\234\322h\274*\037\033=\304\223\314>/\376]>\346c\257>x\005f>C\317\023?adO\2755\221\'\276m\211U\276\256r@\277\302\316\025\277\215\342\002>l\266\220\276#0*>\275\234\371<w\234\023\276\030\1776?\375\244\247\275\343\327\n\276|Q\036?W\262\367>7\375\242=\0210+\276\225\021\275\276\331\304\t\277\365!{\276\371@\306<N\2052\277\020\300\001\276\033\234X\276Z6\370=\260&t>\035\3124=N\007\262>`\"\351>\260h9\277\366L:\276\232i\361\276\234\202\215>\234M\311>\356\217`\276\001\370\251>\236C\205\275W\3207\276U\307\'?\004V\250\275d\331\374<\313\003\320\276p98\275\245b\220>\315\316\367>\331\032\033?c\\\347=\373\376\230>\351\305\342>\210\374\256>~l\257\275\346\n\223>}\342i>\201Lw\276d\'\243>\004\336Y>75\262>\202\030\255\276\006*^?\353\322C\276\254\337\032?h\035\236\274\037\225\327=\372\274l<{\354\212\276\307S\372\276\371\0212?\275Xj>\027\345 ?\374a-?\206\264\t>Y&\027\277\214\274\335=\322\235&?\374wp=\006\227\335\275wc\023>\356\237&?xd\331\276S\346@\273G\025n\276\336\336\231\275-*\272>\343\2654;\266)I=\323\340\242\275\264\221\227\275\337\035z=\322\377\356>\362\237!\274\t\207\202\277P#\201>y\340\316\275\207y\202>\364\225\310<\275\370V>\226\3448?;\004F\276\021\224\034>\216\364\334>\200.\371>\004[\275>\203:\240>~e\003\277u0)=u\213F\275\260l\217\275^\013\354\275aZ\255>!R\363>3\036\202\276{\031\345\276a\251;>\264\007\355=\210,=\275\313,Z>^\275l=/`\204>;\r\242<We\230=^\375\224\272\205\017/=\351\214\325=\312\323\204\276=\207\r\277\202=,?hQ\336=\024\301\264>\204\356\312>\253q\232>\327-\r>\003$\234=\251\321\250>\'\013\367=\304\211\246>y\301\027?\225\234\016<\315\340\022>\244\376\333>\234\016c\275U\325p\276|9\314\274\220\264\320=\273F\214\275\256\357\313>\362\364\006?\313\025\343>\357\342K>1\203>>\242\356I>\341\014\370;\266\016\336\274\030\005\271<}\342\021>H\274D>\340\220\332>d\312\216>vL\232\273\317\355\301>\014\"6>\314\371\274>\'\304\275>\235\221\035>\216\250\262>+\241m\275|\231\002>\375\327\306\274\207@+?\234\370J\275A\311\363=F\330\315=\r\277\312=\345\217\221\276\024:.=Im\010=\273\265\206\276\305\323C>P_\223<x\343\n\275(\335\220>\0144\267>b\373\'>\361\211\r=\033FK\273\232\033\335\274)\215\232\275\326\n\215=\375\2117=\211\345\246>\nt \276w^\370=\014r[>\273\342\036=\323\335\324\275\203P\251>\014\256\376=k\347\010\276\212pa\276\000\350\003>\250\230\016>\351\376\263>\273-\262>\227U\373<s!\210\275\375\224\234>7\001\002=-\023\r\275\260\026\001\276\262\372\203>\222L\214>\304\366\210\275\022\362\236=\212\020\333>\261\t\007?\177\205\270>\351\341\235>\324{\350>\223f\246\276r\372[\275~gY\274Kf\377=\337\213\234\275F=\207>\365\231\233>`\005\310=\203\263~\276\005{\003?>\332\316>\221\032\314>\252\274\247<<=G=\205\033-?]\234a>A\265\302>\335\000\363=T\0108\275t\353\222\276\262\313\324>\377\n?>6\300r>r\333\272>T\3574>Ww\326>\334|\345=\247\332\006>\2532\353>(\026p\272,\277\331>yg\351>\306k\301\275\307\303I<U\316&=\377A\024>\355\266\260\275\r@\003?\251\201Y\275\341g\324=\305\324\010>\010>\305=~\244\221>e\300\360=\032\352\030\275\r\370\321=*P\243>8 G\274\346\036\n>\223d\010?\t\225\204>4\005\254\275\360\276\260=\027\204\204\276}\370\005\275\221\355V>\2701\024?\247\270\247>n\367j>\201\221\217>\205\237\324>\2101r=\021\020\000>\347\'\204=\225\306\207\276\261\2504>\242n\215=\233\240\006>\356\036z>A\355:>\210\334\010>N%\316\275\024%\212<m\207\204>{(\">\034\250\225>\271/;\276\274\247\351=\3071\001?c=\356\275$\243\331>uu\227>WP\264>\354\212\005\276s\252\207>u\215>\276;M\317\275\206\346\342>\rK\250=7x=>A\352f>;\363\205>`\031\007=-\201\013\2746\276\326>\024\372\312>L\226\232\276|\240y\276Y:\251>o\314\017>\027\006\214\2750.\020<\035\003\272>v\233<>\373]\263\275t\301\363>m\302\313=Rxs=.\247\263\276\367y\276;\3210s>\025\211\343\275\000\363\224\274\213\034\210>\253\327\215>\352\2102\276\245O\263>\322\013y>\362Q&\276\000\234\222>\034\010\006?\372\221X>\037\0034>xA\374>f`\362>\247,\236\273\272V\320>\237\366\005?Sx\372=\375L\255>wm\303>\020\033\211>\276\206\364=\252\007O>\003\335\331>\230:G>\t\370{>\212W\023>\303r\241=\032\372\204>\341w\005\276\256\315\217>Mg\201>\014\255\010\275P\361\271\275\204\"\342>(A(\275\005\220\017\276\301\023\002=\372\253\241\274\216\370h\276\001\325\310>,\n\000>\262\331/>\037\024\273\275\341\027_>\320Z\361>r<\277>D\244\214\274\323\212\216>\317X\002\276\225\027\017>)H\006?\032\377t>\000+>=\346WG>\014\274_>"
      }
    }
  }
}
node {
  name: "encoder/dense_2/MatMul/ReadVariableOp"
  op: "Identity"
  input: "encoder/dense_2/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense_2/MatMul"
  op: "MatMul"
  input: "encoder/flatten_2/Reshape"
  input: "encoder/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/dense_2/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\266V\002>\354\264\245=a\306H>\0178\035>hP\002>\204]\312\275\356D\361=\200+\275>\327v.=[:\013>_N\210>\263H\340=)\263\311<o\345;>\225y\316=Jp\036=c\\*>\220\250r>^\220\030>\001\324\246<\316C\214>\217\224w>\022\017\307=c)\'>T\377~>3\023\341\274\351U\220=w.l>\217\013\263>\262\353\247=\341\376T>\264\3509>"
      }
    }
  }
}
node {
  name: "encoder/dense_2/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/dense_2/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/dense_2/MatMul"
  input: "encoder/dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/dense_2/Relu"
  op: "Relu"
  input: "encoder/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\3400\313\276\305\3752>\005\277\030>\346\335\334>?2\247\276\025\t#?B4:\276\312\353\263\276o\364.\276<\014\315>\025 \265\276\202 \272>\025a\263>u}\023\276\330}\225>\025\020\375=|G\374\275H\227\201\276a\256\332\275\237\367\377=\255A\241\276\275\n\316>\004\022D?\205\327\213>\306\300\305>\362\323\003\277+\217\026\276\360\033\304>:e\370>x/Q>y\024\237\275 \037\271\274y\206\014?F\203J\276\315\265\365\274\217#\211\276u\365\231\276:.\262\276Q\003\246\276-)`\276\300\334\246>qg\360>\3652U\276\321\232\032\277\"\322\260>3\377\271\276i\2577?\266+\006\276;\376?>9\355\332\276\004T\030?x\311\004?i]\263\276\034%u\276\235\332\267>.x\227>*\215\325\276?\033\004?\221\224\027\276\t\347\003?Z,\002>\177\356\303\276\350\214.>\026\037\000?\205\260\253\274\263\306\257\276\3418\030\276ueU\276^\036\310<\335\321m=\3666\000>\350\247\213\275\020*\356=zm\014?\034*\267\276jbX?\204`\373<\002\220\227\276\331\203\025?\252\303\365>\331\006\374>\"\270%<O\270\213\2764\220\343\276\300!\373><\225\231>\237\340\363=\204(\255>wM\243\276\002\373\032>\333#\241>n\322\315\275\250\353\032\277v\270i\2774Ou\276l\344\025?\347\201\312\276\020\376\356>\302\215\255\276\264+|>G\361A<\027\225\022\277\354\345\356>Y\034\337\275#\212Z>\277\341\231>\263\316\303<\321\246\251\276g7C>\253\305&\276\200\'\023\276\204#;>\n\317\315\275\204\022\035?\033ic?\004?@>\300\333\005?\253\2471?\002S\214>9\325\223\275;\337B?\352v\362\276K\206\237\276\245\244\237\276\305(\022?\275\336\263>\030]G?\271KM>^\222\341\276\253F\017?z\2008\276\336\003\313>`\235>>\345\214\231>\336\374E?C\323k\276\237\312\244>v\206\205\276\003\036\274=\237\317\215\276%\217\230\277\r,\021\276\333F\376\276\257#*\277\035\373\332\275|\357\236\276\275\271\347\274M\215^\274\207P\250>\016\333\217\276\340M\014?\030\316~\276g\256\334>\357\010\230>\375ld\276\302\310\201<\357\206#\277rD\223>\205\247Z\275\004\232\210\275\205\336\231>\227;*?\361\210\273\275\200\235\\>\223\243\264>\315\357j?\227\204\227\276W\257Q\276\273qd=\0308\211>\037\346\364<B\246Y>\355X\'\273\326R\321>\237\337\316><\007\223\276&40\276\321\263\334>~\261\037\277\265\227\004\277\2228\245>\244?\266>\335\230\356<\345+\220\276G?p>i\030y\276GZ\021>5\021 ?\207\300p?\374;\010\276\235\257\207>\000g\032\275\017\250&=Y\001\231\276\327\365\201>\243\352?\275fD\247>3S\316\276\224\366\364>\351%g\276\360\255\022>\023\034\270>\373\007\232\276#\200\230\276R\366\026?\201\333X\276D\314\321\276\236\023\225\276-\3018?~mo=k\321\n\277SQ\034?\257\337\242>_\027\002>\333\243\245>\256\367\267\276\340/+\276\201R^>\304Tk\274\201\241\000\276G\270\031?*\311\321>*B\006\276)\333\264>\325\205\346=/\340V\275\033(\">b\276\274\275Qi\226>\331\027u=S\221\003\277\302[A\276a%k\276V\007\371\275\202C\245\276\332l\355>4 \334>\214W\n?-y\"\277O\244\214\275\374\324\274\275\250\345\306\274\210\234*\276\031\225\243\276\023zx\276\2571\004\277.\207\340=QZb\275\275D_>\355R\016\277\261u\016>\236[\032\277\364\211\225>\332m\354>\014\030B\276\336\321\033?\220\177\237>4\360\224> E)?\031\232g>\3601\364\276F2\234>\304(.\276\342\376\310=\241\350\370>\2507\257<\366\331[<i\210}\276\017\241\232>\020#\312\274\316\342\371\276?\351d>\201\315\235\274\221*\">\3559\275>\271B\270>\2033o?\324\374\345=j\2124\277\322\267 \276A\303\035?\312\343\260>\333\277P>1\232\037>L\221_>!\356$\276\301\322\210\276\206w\035>Ju\340>\263\337\274\275\007t@?\232\230w>\212\301\n\277\37250\277\227\331\355\27463\253\2767\241l\275 \306\206\276\240\357\221>\017\257G?\002\2046\277\350|;\276\275\312\270\276\233\217\010\276\035\023I?]Q\300\276\344\257\362\274\002\222\020?\320~\225\277\325k\026=&o\020?B\352\236\276\340\206\302>W\353\241>l\342\254\2750,/?\016+u?w7G>\322\210)>\013\323\273\276h\217\\>\241b\204\275I.\\?\301*\244?\254b*?X\327\021>\033}\247<\262[\344\275\226\232y\277\273\375\233>\254u.\275m\251\200?\323\021\366\275w\341\271\276}\034\216?\230\236\205\276\022u\013?EQ\001\276\214\274\201?\301=\t\276/\032o>\214\301_\276+\221e>\022M\220>\273D[?\006\002|?\032f)\276/\235\241?D\345\265>\3424\032?\3457\276\275a3\027?\214< ?\275\213l>P=&?2n\"?dX\211?\246G \276\261\034\262?\231,\323\275\2401C\277?\277\025\276\347\335\331=5\373d?,\010\001?\271_\004?\025\2576?#\2623?\365\002\225\276\313\346M>\251\214\017\277\241(d?\343\237\230>gR\221\275\021\350\202>\267\331K>\005\327\274>Z\304H>e\2554>\264f\327\276\314\2237\276}\302\323\274\337St?Lnm>\235\253#?\375\275\374\275\321\360\253\276\001m6?\230\304\260\276\272X6\276\215\337k\276\'\207\'\275=\006\232>\370\367\354\276\267#U\276\276\235\363>-\336\236\276\313\363\270\276e\257\236\276\257\257\035>\\\277\r=\031\315\227\272\244\326\252>\016\261P\274VT\327\275\016\263\004<\215\225A=\312\n\335\275\037M\030>\222\252\217\276E\270\260=\311\335\212\275\200\370\216\276\354n\241\275D\367\203\276\004\273\300=f\317\003\276\375dL?\353\322\000>+\323\201>\272kB>\266P;=\273\3431?r\322&\275\370{d\276n\266m\276\243Iv>P\313\266>\331\251\300?d\017:\2718)W\275\343\211\364>\375V\345>;\250*?\204a\274\275x\234\333\275`\313\022\276\354\372+\276[\351\251<E\300\304<\340J\222>]\014\202<p\354,\276\361\004Y?\241t\364=\3257\202?\031#1>\224\247j=\030f\247\276v,U>w?J?\243\3718?R7\267?)v\346\275\245\372\371>\335\267x\276\216\014O\277\357i\327\276\371\316\320\272\203\207\024?\334\220M?;\355\n?\2666\230?]\226\207\274zQ\242?\302C\010?p\234\036?\036L\002\277i+\264\277LL\037?\306}5?\262\003\243\276?/\265>l\2710?P\204A=\3163\245>k\330\205>\026|S>k\177\222>\n%\225?-\352\010\277\246\2665?;\334Q<R\211\013\277\233\234\214?X;\202\276\337\2729?\010F\">\014x+>\304s\004?h\273\021>\302S@\277\244QG\276\006\002o\276\241\271\230>\322\363`\277\2727^?\200l\033\274\276\235P?\260\266\245\275\312\316\344\274\345\\c>\312\227\253>f\257\224\276\366\271\001\276t@\276>\362\372\232\276(\275\313\273\340q\022=X4s\276\244\232\357</\022\300="
      }
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul/ReadVariableOp"
  op: "Identity"
  input: "encoder/encoded_vector/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul"
  op: "MatMul"
  input: "encoder/dense_2/Relu"
  input: "encoder/encoded_vector/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\0232\312=\027\307y>\306\324\236=(\036\021>\251\346\341\275\371^\345\274?\"\033=\014Z\216\273$\320\'>e9\t=\017\\\361\274\255[+=\227x\031<l\211\317\274+@H>~B\355\275"
      }
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/encoded_vector/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd"
  op: "BiasAdd"
  input: "encoder/encoded_vector/MatMul"
  input: "encoder/encoded_vector/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/encoded_vector/Relu"
  op: "Relu"
  input: "encoder/encoded_vector/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^encoder/conv2d_2/BiasAdd/ReadVariableOp"
  input: "^encoder/conv2d_2/Conv2D/ReadVariableOp"
  input: "^encoder/dense_2/BiasAdd/ReadVariableOp"
  input: "^encoder/dense_2/MatMul/ReadVariableOp"
  input: "^encoder/encoded_vector/BiasAdd/ReadVariableOp"
  input: "^encoder/encoded_vector/MatMul/ReadVariableOp"
  attr {
    key: "_acd_function_control_output"
    value {
      b: true
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "encoder/encoded_vector/Relu"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 1087
}
