node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "encoder/flatten/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/flatten/Reshape"
  op: "Reshape"
  input: "x"
  input: "encoder/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/dense/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
        tensor_content: "s\004^\277\274\323\340>\361~\020>\364\213F>\343sz?6:\331>E\005\266>\2149\003\276V:+?\220\303u>q\315\230\276\235Y\013?\200j\253<\337pm\276\304C\034\277\225\256\231>\347U\262\276n\241z>;\253\246\275\n\014\330=w\276T?g\311\005?\022O\362\275U81\276\365f\035?\013\016D>\244\274\025\277\372\324\222;t\230\312=\205\274\206\2762\240\335\276\266\352\267>kH\017=\221\220\014<\226\\L\276oL\034>\345\200\r?\262\220\357>\323\017\006\276HD\313=\032\316\207>\317\343z\272@\213]\277\217\201\005>\372\276\356\273\251y\033\276D9\351=\242VV>G\223o>\2214;\276\312\027\277>\254\335v=\346jK?sk\024=pl\r\2752\002\345>\266\314\240<\274\320+\276\357\025\235\276\020\245D=t\212\020\274\325\303\334;R\317\245>\303\0229\277\220\336R>\205\306e\276\t \016\276>\252|<\350k)?\320w\275\275o\263I?Y^:?\246n\340\274:\241\225\276\025\t\244=\263I\372\275\000\010\202<j~D=\252\301\005\276\020\004\020\276\021\200\377\275\355\224\337\276\300\227\036>\355?\216=\3663\332>J\320\235\276<\023t\276\236\006\242>\0015\243>\312\036\204\276\333jA<B%\\\276Q\342\266\274\3311\203>\';\270\276\244\023\202\276r](\276\352\020\014\277\357(\216?\354K\335=\225B\206\276Q\317\016\276\361r\316\277\344\275\024\277\t&\306>\343\265\016\276\t}\"\277\303\352[\276g\375Y=a/`>Ph\250\276?\344\003\277\203\364[\276\214#6\276\245|\332\2760w\230>\000O\302\276&\320\"\274\205\372\024\300\030?\003\277x\252[=\371\307u\276\252\025\024\277\303\346Z\277\314\300\236=cO\317>\227Gd>J\377 \277?Y\355\276\204C\033?\230U\345>U\350#>\306#9?\377y\321=e1X=\337\177\016\276\321v.>\320a\355=;\325\375\275\235t\n?\0333\357\275\223\327\357\275CSt\276h\036\337\276\340\257\337\275\260\262\331>\376\341\320>\310\000\">R]\277>?\264\215>\312q=\276\316\247\264\276yo\223=\033(O>\316h!\277p\234\204>\3602c=\020\260\201\276\260\357\211\275\233$\253\275\272\201\272>s\340!>0,+>\315P\201=56\357>fo\204>XS\031?\000\0104>\252\336L\276R\352\303\274\342\344\004\277\216\035*>\264\245u\275\364Sq\276\335\337.>\315\352\325=\237\316\006?\367\n[\276\360?\315>\340\035c\274\031R\243>eJ\020=\037\256\264=]\310\006>[\227\331\275\277#\034\276\320>\376\2768\233)\275\205u&<\376\0267\273,\370\376=9\200\372\275\301D\r>\337\331\227\276\323\004\t\277Y\317\212\272q\263\343>\323}\364\275.we=@z\324>$\200\t>c\310\230\276\361\014\225=oh\232=\020\210\n<D\370[>\370o\272\276\226R\262>\212\353\275=\342\242Q\276\005!\246\276S\323\257;\013|\212=/V\241\275\342\234[\277C\213G>?y\336\275\340\363\241\276\033\2576\275\230\252!\276\345\372\306\275\022\232T>\201BV\276g\027\303=\032\342\030=\267\025\312\275\005\001\034?\340\032\253>\276\234W\276C\253\373\274\334\256\263\277\312|\227=\262R6\276\364\rO\276\263\200x\276T\016\020\277hs\311\275S\020\332\274d\272Z\276\036\\\243\276[#\251\276\202\033\302\275\355\241t=\344\361\023\274\216\\\211\276\336\237\014>|\203U\277\364\373v=l\021[\276\026CC\276\034\227g\276e9\343\276\271\262\223\275\306\254\324\274\036\221D\275]\220\356\276\036_2<Gg\325>\256\254\022?~\271\346\274\327\013\233>2 \247\276j\256\342\275i\025\230\276hu\224\276\0238=>\234\002)>\177\256u>\306\371\277\275\226\024A\275\242W\234\275&\371X\277@\330\311=\346\272\031?\237rs=\257\353+=\212_\243>]pj\275\225Y\360=K\215V=\323\321\303\276\242\321?\275\250d\365<\035\217T>\247\204\030\276M\234t\274\207/a>\016\020\242\276\2263\264>\334\201\327>~\327\370\276\023\224g\273S\254\262>\326\221 >\035\274@=I\244\316=W4\220\276\352\027\200<\207\362\310\275S\030<\276\010\2068=\355\240\211\275mn\252>ak>\275d\\\300>\206\337\322<*\275\231\276S\221H\274\343,\333=\332\311<=\312\250\357=`K\204=\337x1\276\001K$\276\006<\241\276_Z6\276O\030\010>W\024\326=]\203j>\242t\243>\326\256_>\005\215\177\276\234!\274>\267D\211=\021y\232\275\330\303\300\275\3026>\276\330\354y\275\350\307\251\275z^O\276b\367\261\275\000>\334>\236U\\:\265%)>\231\226\227\276\010\303\t>#\216\300<H\222?\276c\363\326\276\266\025\023>\266V\247\276!2>>\376\240\220\277\352\263N\276\216\236f\275\211\255<\276#*P\2761k\361\274\373\314\326\275\246\306\323=\262nO\276\"b\220=G\276{\276Q\341\361\275\013\031p<\307\265\201<\371\030\213\276\007\315)>pG\027\277\2479\000>\373\224Y\276F!K\276\362J\333\275<R\207\275\237\230\256\275\333\345\317\275DE(\2761\343\021\276\241\024!\277\035\363\203\275\177:\202>\022\035&\276y:]\276X\224\256>\250\252\006\277\257L\235>R[f\276?\276\340;\\^\203=\246\021\233\275/\211\272<\317\226\271\276\375\200\217\275\260\225\037\277\346\216\323\274\n\002\264\275 \3663?\254\013\241\275\275\255\342=\213s\262\276`e\236=\376\204\353\276\314\332\241\275\336\3459?VgB=&\274h\276&\320\206>\371y\305\276\272\273\267\276\353\2767\277\211gk<\347T\205>\241T&\277\305\212\007> \266\221>xv\027\276]\002*>\200{\302=\2674;\276\\\273\223>2\204\353>[\330\317\275\207\177\224\275\206z\024\276\003+;\276\240\002\376\275\205\034\347=2\315\252>\377\221\t\277\343\331\264=\226\304\205><\204\270\274x\340*\275\330\037\364=\272\3041\276-4\241=W\023\247=Iv\227\275\004\263\257\275\\\264\212\274`\261\022>-\354\257=D\200\037>\316\327\n>\245\256\037\277\270S\n>\320t\350=\'L\266\275\017\255\031\276\223r%\276@\317$>a\027~\275E\333 =\326E\023\276\002\257\265=\022\374\237>M$\213=\214\006\354>\365\261\210=\222\300R;gn\255\2765:\251=\323\224A\276\376\321(=\237c\274\276\256\200\024<\261\355\341\275\007;\301\275|U\027<`\257\210>\021Ad<n\240\266=\030\251\262\275\202\256\023?=|@\276u\234K;=\021\033\276\200[c\276\241#\212\276\300 \277=a\266\220>\213][>\262\337\204\276\244\335m\276\031\367\020\275\t\006\241<\367\307\314\274Y\205\202\275(\'\016\276G\302\274>\225\234V\276\355\335\320\275)\366\365\276\221\265n\277A\232\035\276b\006\205>\216u\351=\361\215\267>\310\254\365\276~[S\276\200\234\236>\027\243T>\204DA\275Y}\261\276\027\213\367\275\225\355\216\275DD\346\276\217T\200\276\354\026\241?\351?\256\277\232\366\310\276\177\336\306<\267\026\004?L\327\320=\343v\013\277\007Z\323\275\364\255s=\301E\304>\006\373(=\246\333\372\276\203\310n\275-\005k\2774I\261=\271\2543\277\341}\235>]Df\275\237O\215\276\036\322\266\276\001V\303=\336\n,\277\224\r\270\272\344R\201?x\373\204\275\2102\333\274\017\255\025\273P\213\000\277\202\271,\277\363`\n\276z\003\361\273A\263\345\276\252\n\036\277\232\257\204>l\n\313\275h\"O\276y`\013=y8\034\276k%\214\276\357\307T?\243T\371\274\004\334\311\275{\217U>j\361\273\276p(\031\276\377\362\004\276\361!\022\275\347L4>:\271\205\277IMd>6 \n>\030\275Y\274\221\035\203=:t\237>\354\375-\276\337\177N>\207\253\023>\271\001\263\276\355\016_\275\247Es\275\246\373\222>\330\261\250>6\227\r\276\020\005\216>\3207e\277\233\360\273>\210\330\347=4j\367;\3258\242\2751\330\221>\307F@\273rQ\311\275\372\225O>\233\253\231\2730\363a\276\031 \'>M;\233>\203\264\227>\222\266\377\275\270\214\022>z\372\211>\212\2334\276\354\3202\276\261D\006\276\244/\201>\241&\213\276\366\250\024>J9\307\275\360\244y\276`=\372<\030T\211=\240\234\332<l\267\016\275\236+8>8\021\237=n8$>\301a4\276ZL$\276\250\232(=\234mL\276\360\305w>&G\273\275\320\247\207\276\036\303\030\276\\\311\326\275x\347\256\275\260Ul>,\034\357=\210?)\275D\366\261=\334T\261\275 DP=\2304\257=\254\364W\276J\030A>\342\376\016\276\300\241;>f\225\202>\220\377l>\354\343\321=\3570z\276\033_\024\276dib\276R\373\037\276\360\256\324<\034\021>>\272\022\n>\300BJ\275\234\333W>&\317\177\276\342a[\276~\373\207\276\004\257\024\275\254\326\244\275\234\206\237\275\004n]>\340K:\274\344\266^\276*0\035>\260\230\212>\006\010v\276\224\375.>\316\224\270=`\262\035\277\203u\226>\177\316\247>\305!\255\2762\277\201\276jw\242\275\251\032\331\2763\347\217<\2002}?\255=\214\276\024\"\363>\202C\341\276\220\326\377\276Mi\215\276eV\377\276\270|\344\275W\3420\276\234\004\217\277\301/\276>|\304\361\275`R\034\2752\325\316>\30263>\362w\342<\377\242\306>\315\373)\276K\263\022<R\225&\277.\234B\276E\1779<\230\030\000>\207\205\316\276\347Uz=\235\311j\2772\346\022\277wo\256\274\331\311\033\276\025\261\254\275Fa\225\275\313mz\274\007?\030>W8M\276\204>\014\276\245\322\314\274\236A\032>\264\317\t?\251L\350\275\026\024\221\276\303\311\276<\257\223\'\277\2111\017\277\305(\234\275\303\332P\275h\231\266=\240\330K=\2052\302\274\346\020\n\276\027Hb>vq\000?\007Xo\275Y&\022>\023\032\n>o\305\272<\220\345\260\274Q\021r\276!\331\201\276\351\337\211\2760\205\323= \237r=\342\033X\276R1\375\275\304\343\201\276b9:>\326\213a>n\355\003>\334\241\233=N\2633\276\275\033\200\276\240\354\215=^{F\276X5\352\275\310\227\327\275Vd\206\275\3249)\276\3144\367=\256\0307\276\214\346\360=x\256N=\342V\223\275\200\247o\273\360\217%\275\362\3763>8\nq\275\200\225\247=|\312\301=\220\275&\276\300\2732>H\207\">;/>\276,\'&\275\010\302j=\000\013\003>q\306v\276\234\240\251\275\000;\307\275\256\207\"\276\020\231g=\244\337\327=x\213}=H\203X\276$1\211>\310\004~\275\200\363Q>\020\000\003>\200\375@;6\237\201>\\\302\214\275T\261:>\312K\004>\027\177\031\276\370\315\033=d\241\035\275\244\324\272\275\202G\212\276\2350\037\276\024;\312\275\022c\021>\252\246O>\217\340\330\275\210\313\001\276\362\260\212>\304nS\276\013R\327\2759\253\251\275\240\r\226=\2459\024>E\254\274>\345\213\341\275\314\r\311>\013\016\242\277H\234\231\276\366\214(\275\023\275\372\276\205{\327\274\340N\177\275\211\030\373\276\2201\226\276\301 \t\276\243W\350\275\0249\220\275 \031\206\275\342\363\204>\254\300\r>\207\032\017\276\001\'\030=R\222w\277x\'\037\276\336~\215\275\313\301\240\275\242\311b\276\303\220\035\276\004\013|>\214%\260\277\322A\242\276\241KK\276!p#\275\352\206\345\276\322e\013>&@\031\275\251\274\251\276\230\202\215>\361\003H\276\300,v\272Y\213#>\027\226\317;\360?\235\276\265if\276GyL=\256\227\262\277\272\ri\276\224VH\276\207/_\275\267\317\250\276d\010n\275\023\225\317\275\360\274\023>\236\025\206>\353\034(?\274=\005\276\364\2639<\334n\\\276\002\360\212\275\200:\326\275B\376\211>\262\311\212\276$\343\352=}\036w\276x\3251>l@\323=\340\270\224=\030-\233=\000<\334:\034\037\201\276x\323\304\274p\222\241=\276xM>\360\337\224=\276@\034\276@\214\313;@\037\210\276\360\000\373=&\374<\276j\273M\276\204\3770\275J\322&>\272*>>\210\022\372=#g\t\276z\233\265\275\325uu\276j\255\003>P\000N= \364\030\274@k+=\024\254Q>\254L\360\275\000~D<L\\r>\356\261\206>\204\344\325=\344\315\\> D8\275\356w*>J0{\276 .\034\274\030\205(\276\370\037\203\275\010\202r>&\033\264\275\3001\235\274\262\223\017>\270\340\004=\254.C\275t9/\275\2068\014>n\017\206>\334\027x>\220\264^>\320f\234\274\000\023\303\274\360G\215=\322G\305\275\200\340\306;,F\312=\2109y=\223\206\207>\036\322\226<m\340\213>\\\233\240>u.@\275/q\230;|jO>$\2007\274X@9?\310\273\271<\351#<>PE\345>\357\203\004\300\312X\261\276\267\361C\277J\302\306\275N2\245\274O\020\205=\277!\341=\347CK\277\024\265\002\276\355\023K\276\225v\272\273j1d\276\200\233\316>\031\275\372\275\005\364\321\275=\023\016\277\036\345\240\277\355\017)\276F\034\205\275#S;\276\221\211\026\276\263\351&\276<\023\346=O-\376\277\266\034\354\274\310\375.\276\244&\023=\267\274\266\276G\372\270=\n:{\2766\322\000?\034\317\306\275\004PZ\276\272<R\276D;[\276\361\314Y\275\006*\306\276R\004K\2764-\322>\251\365\364\277\014-2\276*\333I\276F\326\205>}\207V\276\314MH\276\003]\000\276\005Y\205>G\354\256\276*\373\r?\'J\245\276\2712\233=\226`\350\276\030qu\275\324\304\245\275\360\261|=\240\260\265<tC\257=\364\220s>\200f%>\230Is=@-\211\276\000]\354;\233.g\276p\004\261=TV|\275\000\361M<x\341Q=\007\365\177\276\000\277\220=\334\244\322=\300w\221\273\302\260e\2760q\265<5\342\017\276\200\233y=\020vj>\240I\317=\370\320(=\000\2147;\010vl>\017hW\276\020\210\010>\351\323\205\276\0200\274<\311\270g\276\250\\\235\275\020x)>%#!\276\010\352O=x\243\357=LoK>dO\002\275\210G\027\276\252\335\321\275,A\333\275zC\016\276\240\206\200\274\314\307\021\276H\246\377\274\210f\216=\324\205\256=\350\232\305\275\300p!\275\023\006T\276\364Bq>\334\253Q\275T\307M>\230\315\'=x\036s=X\357O\276\310d)=Ya\001\276.Y\210>\006^\200\275(}w>\224\320\271\275"
      }
    }
  }
}
node {
  name: "encoder/dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "encoder/dense/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/MatMul"
  op: "MatMul"
  input: "encoder/flatten/Reshape"
  input: "encoder/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/dense/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\200\013t?\366\0205?\3221\203>\277\006+>\021L\035?\310\233\032?O}\214>\350 \024?\032\034-?a\325$?G\212\244>=t\276>\265\341\224>*\337m?g\2645?\323HZ?"
      }
    }
  }
}
node {
  name: "encoder/dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/dense/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/dense/MatMul"
  input: "encoder/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/dense/Relu"
  op: "Relu"
  input: "encoder/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\347\224\242\276pe\301>W\241\035?\216\323\001\277\003\216\303?.t\002>\016\006\212=\343\023>\276v^\346>\220\200\251?\304\210l?\211\234\212=\3144\200?X^\205\276\335\332\357\275e\232\032?\276\177\004>\356\365L\276Oh+?\322KU\277\223\261\236\276R\024\243?=\203i>-&Y\277k\345\037\277@\3341?\233\361)>\345\217\304?\256\2014\277\373\245\211?\331M\222?[\347~\276\213\022 >\204`\227?\3342y\276\215\354)>T\243\204=uv\277>\253tk\276\010\270\234\276m\372\336>\221\272V\276&\365\301\276O1\231\275{\321\220?`,\320?\177\367\362>\3662\300=\355<\213\275&\252T?[\270\004?\006e\230>uN\005\276\253\302\236?\211J\217\276\004\3274?\2359\236\276\253\026\274>2\010\205?\372\276\024>\265\006\232>b\262\233\275\335\244\210\274\252\216\r?\177\352{\276\024\362\270\275O_t>\277mD\277\372\025\300\277\361\342\226\276\343\377\264\276\226r\325=\353\003\320\276{i/\277\001\017\301>\026\312\273\277\340\372j?\337\037P?e\t8\276\030 \251<\277\230\335=\230if?!eR>\327\352\350<<X\265\277\010\276m\276q\363\326\275&ZL?\262\310\270>\326|\034>V\327T>a\263\243?\t\214\243>\243y^\277\241\006\243>\032\014Z\277Q\226\240?X\341\204\276g\031\210?\201\371\300>\302X\313=\010X\310>\213L\036\276k\2008=C\304\352>8\247<>(-=>j\037\347<\324\317\202?\262\036\307?fO\"\275\321WC?:;\220?Y-\321\276\201[\034?\014@S?0R]?\212\tn?\304\370\333=VKr>\301\352x>\2414\247\276\236J\247\276m\321\204\277\235l\242>\333ds\277\034z\021\275\323\362:<\200B+\277\"JX?\312\254^?\360\222G?7\210\t\276\325}\235\272\\?\034?\3072\266>\303\303\321\2754Y\002\277^\352\020\277\2111k\274lpJ>\337\266\272\276\316\3141?*\2114?O;\212>\324\002~>\032h\371\275\022\3758\276\004\316A\276\300\212\'?#l\324\276\037|\215=\262KW?\237\351U\277US\n<1\316\316>\345%\342\276/m\223>N\227\036\300\006\330\263>t\276\030>\212\004\025\276\033\352G=\355\277@\277jm)?U\202\020>\322\352??7\331\332>\335\2303?\324\0367=\303\255\320\276\2731\225>\362\200\314=\n(\022\274@\216P>m\013\262>\013\201\241?\223\332\312=\367r&\277\275\030\021\276\336\317u\276#\367\327\276\254$\001?\332\317\211>\326\323M\276\003\030\016?Da\004>\355\036p;\352\231\t\276Ir>\2753#`>,\237a?\251\354\034\275\334\023n\277\353\377`\277}\264\345=\2239\224=\354r9\274\272\237J\275\314\0230>1\000o>\360_:\277m\030O?Y\361C>\367\375\326>\013\244n?K\371\345=A\302\301\276I<\232\275\351\t\031>\n\250u\277\207T5\277\356\216\316>\3211\207?$\021$?\'\331R?\313\324.>\360`\242>\256\025\203\275|\316\210\277x\374\014\276\204\277%>Q$\020>\341e+?\320\217\315\275\021\004\265>\336\374\336>\333\275]?xc\034?\333\206R\277\214\347\032?\360\027\221\276\372\232F>\003yX\277\211\213X?\017l\036?\na\037>\366\232\375\276\'M\356>\334\363=?\207%\376=;\002[\277]\366%>\002\241\202?\024\303\303\276\347m\030\277\345\\\231\276\023EV?|*\310\276\362\247\'?\235\372G>\037\032\226>\257B\021\277\340\372<=\320\030s=\352U\372\274"
      }
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul/ReadVariableOp"
  op: "Identity"
  input: "encoder/encoded_vector/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/MatMul"
  op: "MatMul"
  input: "encoder/dense/Relu"
  input: "encoder/encoded_vector/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\236O\364=\"\350\017>B\214v>\r\212\226>\357\233\000\276\2302t\276\277p\210?\206\231\223>\002\2210?\010i<?\266\311o>Fp\244\276\330\250\334\275\377\030C?\217\206\237\276Z\325\017\276"
      }
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "encoder/encoded_vector/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/encoded_vector/BiasAdd"
  op: "BiasAdd"
  input: "encoder/encoded_vector/MatMul"
  input: "encoder/encoded_vector/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/encoded_vector/Relu"
  op: "Relu"
  input: "encoder/encoded_vector/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^encoder/dense/BiasAdd/ReadVariableOp"
  input: "^encoder/dense/MatMul/ReadVariableOp"
  input: "^encoder/encoded_vector/BiasAdd/ReadVariableOp"
  input: "^encoder/encoded_vector/MatMul/ReadVariableOp"
  attr {
    key: "_acd_function_control_output"
    value {
      b: true
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "encoder/encoded_vector/Relu"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 1087
}
