node {
  name: "x"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "decoder/dense_6/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\332\344+\277\342-\333\276\322\000 >\000\360\034>.;\320\275\300i\363\275\370\026\235\276,#\212\275\356\365E\276\324\341U\275z\331k;]\316,>\333\347/\275\323\260\226\275{\366.>\217C\340>zY\372\273\337\306\214\276\013\240\213<\3738\260>\256\\\212\273\263\333\223\275\036fn>\224}\027\275\212Tu\276\37213>\370\215M\2769nK>\212\316W\276K\214\243>\254\270\201\276\334|\213>7\227\262\275q=\260\275\030\312\010?\217N\345>m\335\005>\207IW\276\343\017\030\276;u\340\276\036[\027>\361\373\231>,\276y>\272\037\252\276<\177\370=M\304\247\275\252\020\'\276\201H?\276n^\231>M\020\272=\2640\375>\254\301\276=\230\270\024>`o\016\275\263\236*>\366@\243\275\223\363\333=\0012j\275\301\0175>\034\311\325=\370C\253\275@v\002>\321\254\021\277n*~>\220\350\242\274\321\263\030>R\026\020\276\014\230\235\275\266RD\276\t\347H?\264)\242\2759v$\275\"\r\264>\207~4>\363J\357=\034[\022>\256\021\232>\330=\311\275\355\371h\276|u\032\276CJF>\276\004\207>\314\020\035\275\227\327a=c\037\217<\374\267\202\275\014\373\003\276\354\360\241\275\241 \351<@zs>\257(I>Yfa>c\212\327=Z\236\331>d\255\312>t\254\213\275\003\366\264\273#[\202=\351\010\034\274\203l\303\276\206\270\225\276\017\340\220\276\314/R=\003WF\275)\2542\276k\236F\274\374\277\237\275]\302\362\275Z1\266=\004\327\341<\237r\262=\321Gi=I\317\252\274B\261K\276^\232\224\2766\340\241\276 $\275\275>i >\246\346\260\276\177\211\233\276\373\226\273>\303b\336=\017XA>X\211\267=\213E\252;Z[\230\276\367\372\277\276\036$y\275n\241j=>\275\314\275\206Q\252\275\327\'$\276\225 \302\276\2008\251\274+\356\n\274\350\027\260=\366\352\003>aJ\264\275\225\364s\275b\261\033=\000\305\227\275\370\340\t>\200\277\223<\262\250f=\330\215\'=\313\026U>\304\030\034>\312\317\r<\244\343\250\275\225,s\276\234\2269>\372\250o>\312xv=\222\220\363=\300\357\310\276\372\303\277=\301e<>\306\253\017\276\210>\210\274\nK5?\200K\351=W\302\\\276\024a\312>9t\275=x=7\275uGX=_3\205=NC!>&\023W\276;U\320\274A\t\033?\351\"t<I\321\324\275i \261\274\026E\274=E\216\003>@K*=\311j\317\275\243;,=\n\257+\276\253\312\270\2730\024&>i\231\322\275,}\030\276Fw\230>\337\311\244>yY\301\276\n\300r\276j\216(?_\225\325>\010\235\253\277\0071\025=\2560b>\240)\312>A\364\210\275\246\232\342=j\307\270\274\313qy\277Z\t<>_77>\271R\247\276\346\335\266\275\334\326`\276\315\000\333=\354\257\222>\246\036\023\276\360\2469>\037\254\336\275\355\214\230>Z\351\264=\373\316?=\231\263\342=l\261T>\220\n\277=</\t\277R\2168\276\314\235\226\276\361&9>\223\316\210\273<\210\226\275\350\327\352>m\215\365>\330\266\245\275\211\334\224<M\235\354\275\037\003\007\277B\347\023?\303L\270=\227\375\242>\206\036 >0\\\365>\372*\311>\251\325\001?6C@\275\00238>\243\350\213>\006\035\316\275P\311V\276\321\020\016?\t\342%\275P\303\320\276(\2418\2778\\$\276l\363\322\276_\335q\275\265i\355\276\237s\002\277R\005\017\275\033\261\240\276\351Z\\\277R\302;=\\\200q\276\215=\304\276\363x\335=\332Cx\277 e\226>\317\240\332\276\020i\021\276k\241\364<\255\347B\275S\025\346=\226\320\342<K\256\232\276\345\251\317\275\266S\004\276\000\033\226=\037\250\320=L\002F>\231)\"\276w\234\310;\351\214\">\276\231\275>\332a!\276\002\210\272>\307\360\026>\034\013\325\276{\tM\276\215\324s>\316#\301>\343\274\223\275P\026\027\276\271\210\026?\341L\003\276\254*+>\217\007\t\276m\263N\276\000\007:\276\266\030#>\340!S\275\225\273\361=\214\3701>#7\207>BAa>Z\213\236\275\235c\251\275A\257\261\276\334go>\227Tz>\230\300\202>\233\0028=\237F\333=\200u\312=\323\254\202\275f=I\276I\345\023>\360\177\264=(\257\253\275b\t\255=_\257\267>\201k;>j\227\003\277Awj\275\331\366\241\2753\325F\276\227\234\366\275\010b\003\277\301\331\231>\031<h\273\002\376\022\275\215\345]\276&\2156\276w-\334<\351\235G=\364~B=\236_4\2762\234)>\257\327$\276a6V\276/\272\304\275\226H\314\274\243P\334<\024|\327=\014P\301\274\223\245-\276\366\006\034\274|\270,=\253^\313<=v5\275I*\375\275\201c!\276\342\356T\275\370\331\221\276\010\333\014?\245\330\034>2\033\214\275\312\372\004\276\250\215\t\277\201\243\035\275.\205\233\276+\266\251<P\252\274>j\205\022>W\377\357>\"\')>\220\374\007\275\267\241\357>\206\222\r>6\274B>\226l0\275\357n\250\276^\036\215=wol\276:\335\226>\307\025\317=\257\303A>W\307;>\376\005\003>Dx\232>\017\230\001?[\n\262>\275\265\256>f\303\267<\242bE>\005Y\210\276\014\200B?\023\252\024?\026\001\220\276R\2531>\365\254\205\276Zf\265>\0242\350=\373\242\231>\227,0?\261\306\271\276\335\265\256=\255\332\351=\350=\216\276\310\351m\274\300\230\222\276\301\326\376\2754\020T\276\330m\255=\006\331\007?u\247\310\275\327(\320=#\253\304=\241\027\236=\224\344\267>\352\322\242>^n\273\276\025\277\217=\304Ia\276\332\321N>k\277\371>x\032\035\276\023s%>\333\2627>@9\013\275\210\n\275\275\2737$\275\241\330\240\274\026s\342\276>\277\017\276$P\237>\342\333\276\273\307\201\234\276Ve\232>\231c\205\276\311\007R\273\371\021\374>\351\021\276\276\232w\205\275a!\270\2768\200\030?\355\245S>u\222\226>\342?9\275=\355\270=\007/\231=\275\214]\276{\307\025\276\236\001a\276o\302<>.\262\243\275\006\364\243>!J*>\244\307\n>\217\0274\276\347\031*>$\342\253\274\301\372G\2757F\222\276\361_\203>\\,\220>(\346\347\276\234\273R\276\324_\'?\300\332\337>\3570\037?\03262=r\2672\275\022\006\303=\276\345\024?i\332)<\002`\220>\022\325\031\276\235il\274\231\0251>\257\222\000=\n\003\247\275-\345c\274\010\272\205\275\350\376\007?\"\rZ=\030\321\304\275+\200\315\275\303A\035\276\320\304\000\276\243\332\203>\004\005\350<\"\232@?[\0055>\0102\212\276\255-t\276\267\340\r\276p\030\263\276f\251\031\277\331.Q>ei\251\276\322^\370\274ZJ\004?\036#\252>\341Z\264>V_\315>f\360\241>\302\325\322>\324\360\326>\344\020\227> E\206>\270\242r>\250s\262>\236!P>\316\301\270\275wJ\241\2768\256;?k\277\201\276\016\242G\276\253b\250\276*\231\254=Y8\300=\261/\337<d\305\264\274\373X\270=c \315=f\334\'?\216\372\035?\352i\237=\237\356\211=\336\2301\276;zm\276\351`\'?\305g\243>\264\251\266=\345\034\311<B\014\376\275\340\341\371=![\020>\004\236\271\275\254N\301\275D\016E\276\007U\222\276\"\001Z\2754\340 >( \365=\021C\272\275\010\226\221\274;Cz>;D\361>\321DH\276\274Q\323=\227\"$\276\035\002B\276{\354]=\036]\317>\245r\201\276A\245\367\275\005a\033?\037<.\27704\026?C\352\366=\316\204\213\275\332l~\275#\222\211=.\2213>V\000\373=\301\364w>\375\251\205>n3\211\274\030W\347>\250/x<\017\334\334<$\273\263\275\375\026_=\203mJ=w\305R=\257\271\356=[\210\227\275\311\t\216>:\243\014\276\303\212\210\275pz\304\275\242\253\204\274,o2\276\315\270\014\276(\'*\276s\316_\274\324R*\276\224 \017>\253\340:\276\264\322\316>\016)\202\276\312-\273>e\003d>\344\250\262=\210Ig?rB[\275SZ4>\224W\250>qOY\276r\221~>\223\275\021>\355KP>\022\231\221>\236\323\316\275\346\025}\276P\330K\276\037\256\353=1\007\177=\245\272j\276\030\243\014\276\306\314\216>)C\251=T\251\304\276\364\0104\276DCO\276\2157n=\250C\303>\300/\275\275xRA\276\340T\330=;)\302\276\373\031\211\276\250\010\004<\"\020D>H+H\276\256\'\254\276$\352\003?,|\327\275(\327B=E\016\032>\024t|>\322\031\033\275\343\025\200>lFO\276\325\2273?\221C\260\276`e\260\274\251\277\314>\370\227\252=\031\327b>\370(\342\275Y\002\244\276\317\246\202\275\371hC<\306)=\276\240\326\260\275\315h\354;g\025\226\274khS>Q\274\373\275\243\206\n\277\036M\365>\305\246\006>\016gE><\367J>1\305\000>@\261\211>\003!h>id\262=\312\251\366\276y\201\250>\327\315\314\276S\241\227>\240\230\255<\033\264$>\325\315\004\276\365\r??\254\244J\276\307\332!\2770\\\217=c\260:=%\223\246\276\3274S\276\262\373\347\276\357\316\242\275*\340\266>/-A\276\275\342\207\275\315G6\276H\216n>\332\327\271\275\313+\275=\346\323y\276\0239\335\274\2052\223=hY\321\274\010b\377>v$\036\277s\222\355\275=\034\214\276\206\310I=[\320Y\276\213\362\315><t!>\311\027\351=\034\037\003\277\002X\347>\252\026{\275\230\021\227>\364>\312=!\334\020\2765\034\277\276\310\3300\276\000\220\010\2766\303\026\276\216\206\347=y\253D\275\3305?\276\'tU>qu>;7\223&>\262\257p\275;\332\215>_\332\271=\254\373\314\2739W\333\275\255`\223<@\373^>D\262g=\250\3529>|\244\346=W\356=>\341)\233=\270\273\351\275/\026\237=5\374\220>&\261N\276\362\333\372<\003\267->\357\312\026>7-\333\275\037\203\355\2730\273j>\267\365#>Va\271\2740\361\030\276\002<\027?\0143\366\275D\302\206:!*\233\275H\0330\276[\312\005\276\331\034f\274\271\216\363\275\326d\336>OC\037=\013\264\303>\304,\024\276\203\256\370\276\033\320\357\2758\301\207=;D\237\2762k\004\277D\267D>\030(\315>k\2548<\246\362d>\270\312\377\275\344\342-=\217\357\263>\026#\"\276!\356I>]\3440\275\000\353\013=\242[y\274\366\367:\276E\261+>9u\301\275\016^*=D\340=>\35091>97\021\275\317N\264>L\367\254>F\363\230=\035\306\361=\207\335\257\276-N\235=\025L\006?p\031\034\276@ \226\276H\261\373=\315\027\274>\337\250n\276\242\214\024?\007Q\333>&\261\307\275\342\301\357>\200\202t\276\217\342\253>\000o|>n2\206\275{\031\232>\235\256\374\275\036\362C\275@\3173\276\325\321\373=\253\341\337=\222\236\016\275[\002S>\037#\002\274\363\310@=\".\252=\341\316\337\275h\2156\276\372\242q\275J\274\244\274\315g\373=\230^1> \nc={\356\301\276K\364\315<\266A\230>\206\276\"\277q(?>;-,\277\343\035J\275?\361\251<\266\237\244\275:?\321>\307)\240\275\205\201>>O\350\010\276n\257\205>\345\247\023\276\350\300\244\274\332@/\276\004\326\226<\246)\t?\203\246\026>\204\311#>\335lz>\265\207\242>\032\255o\275\360\310?\275\247\206\303\272\253\371\322=mo\016\276S\277\320\275\036\214\227\2768Wz=!\206N>\005p\002>B|z\276\220\321\277>*\024\'?\370\343\354\276\243\212\216>\271\304\366>l\025\222>\201t\227\277z\206\032\276\253\272K>_\374\304\276\014\225\014\275\030\265\036>(_T>6>0?M\360\343\275V<.\276\207\312v>\216_\320=\233\3051>\201\233\217=\203\\q\276mGI>\214\221\336=g\315/>J^\233>\022\302\246\276?7\272<\355\211\304\275\234\032u\276m9\335\276\277+\236\276C\036\202>\267\267\341\276\345\340\351>\346m\002?\321\232\005=\265\230\325>\213\353.>\027\220\213\274\334\303\t>\254\036k>x\0331?\222.\273\276\244#\215>\353\340\301\275B\206\203\274`\220\212\2769\321\030=*\340\004=\005Rh\276M\265g\275[M\000\274\371]&\276\3046Q>\'E\002>\027\r\203\275\016\343_=\032|b\276\0227\323<\373\001\354\276\355\266\023>\010j5\276\277\355x>\252\000\335\2755\312$\277\30590\277\300b\024\275\234\227\255\276\207\036\350;J\276\357\274h\363\227\277Fl\032?\3356\007>\311\316\345>\354!\332>\331\016{\2757l!?@\250\225=M\037\212>\240\206&>\350\033N>\330\233\260>z_q>$^*>5\035\314=0\252x\275\373\301\006\276\275U\036\276S\376@\276\2021\373=\246_e=\001\025b>c\373\273\274\213\246\206>M-X>\262I\213=\230P:>\005\321h\275\230&\200>i\267\240\276o\235R\275\311\350\362>i\274\277\275\372\2047\2765O\244\276\025m\352>\366G@\276k\232;=\226\025@>\340\301\237<\366\346?\275\377d\036\277\022\037\270\274\253\020\347=\3239\236\276\255\002k\2768$=>\242\362\200\275\307\275\023\276(\241i\275\016@\344=\352\362\027\276\365-\343=\206\005J=\004r\356=!72\276\244\364v=\221g{\275\303\305\270\275\321\351\n\276\317\356\221>pP\000>\302\005\020\276\031P\315<\016L{>e\027\266<\231\262a\275\212\000\255\276R\323\352\275l\344\001\275W\263@\277\315\203d\276\253\002\200=\226\363\037>y\245\025\276\3111O\275\236\016\236<\014c/\274\3300R>\276Y\351<\354=\252\276\276\207\223<:h\365=p\316\372\275\314f0\276\256\004F\275Op\213\276\234\347h>\314\302I>\315\330\204\275\371\273\246=\347iA>\337\207\200>\344c)<\020\301\234\275\301\324[>\355\364\n\276q\2521=\254\240\005>h\221A\276e\2641?\337{U\276\314\227\341>\260 ]>\n\365\023=5Z\252>\327\037s>si\030>C\020j>\347T\274>\013\242Z\274U[U\276\363\212C>v\007\203>h\225\233\272j\017\033=\311\344y\276Q\273\023\276\021\246\314\275\377\374\007=\005\314\316\275\303\305\213\276MK\342=LO\302>\377|->{\277\361<\336+\275=3\200.\2761/2\275\326+\023?\276\203\217>3\010\007=\245\000\017\276\037\232\005>Sq\323\276\325@9\276\014\251\240=\301/.\276\336\320\207>\330\005J\276<.\346=\323\006\032>Y\232\001\276\234\375\266>\030~H>\273\340\221=\252 \276\275,\2229\276\307\264\016=\246\321\002?\0345\027>6`\220=\334\353t>d\316\326<\331\231\262>\205\311F\277u\031\311\275\351K\336>\367\213[=,\346\201>\347<]\276\230\261\250>\003)\203>F\271$\276\263\306\036?F*\026<\231i\"=@-3=\235\334~=\301b\373=\310\\\204=\035a\023=R\321\366=d\033X\275=\r\204\276\0250\254=N\203,>O\007\224\275\201\265c\276\000\353\300=\tF\211;\311\013\307\275R\n\300\276\213\332\205\276\027\266\317>\343\314\242>X\254@\276\032h\324=\036\005e\274gm\310>[\327\221<\3068\266\276tG\351=\243\014\t>\016\311>\276~m\r?\321\2625\273Q\340>=\323Y9=\227\017\326=\276gJ\276\376\343\342\275?|\211\275P\002\262\273\245\250\230\275\270\223\336\275\357\201\005>q \202=\204\356\301=L\000(=i\236\016?\3409\002\272\274\340\331=\232\307\025>\031d\356\276\025\210\211>\233[\237\276O6\222=m\311\252=\261\256\361=\001\335\244>GH\246>](\017?~\\\002>N\2318\277\237\003\203>A\310~;,\314\'\276\362\021\271\275;B\213>9\356\023\275D\275S>\263/\207\276\363\362\345\275\316\245!>ia\266\276\270-\252\273\263N\235=\213>\256=\216\354\216>\346\253\370=\2007\021?\367q\304>\350\367\243>FY\273;@\224\307\276\360\300\177\276\263>E=\321\024+>\025\303\255\276GPr>\203?\215\276\003}\302\276Q\264|\276,\236G?I`Q?\317\0015\277\226=\005?6\271[>K\356\332\272\204\237z>\001t\266\275\314\262_>\000^I\276\002\213\216>!\216%\276\251f7\276)\215\215>\341\240\024>\\\211\014\275\230\205j\276&/4\27693\262\276\314\357\273=\210\250+\276\246\302\303>\230\332\240\274\024\301\204\276\201!\355\275\364@\217>%\227\361>\260a\213>\317\317k=\210\"\323>\211S\260>\226\351A>\340dY\275\222[]?.\261x\2763\330\273\276\3368=>~\232A>\205\377\273=\275\374X\276\010\254X>0X+=\366\001\021>\3264\301>\346\001\353\275Dh\346\275\272\027}>v\366\236>\243\362R=)H\n=2\t\013\275\023\300[\276\320 \207>#\310\372\27524i\276\321\315Q>h]c>\246\317\327\275B\0009\275i\342\346=\330x\005\275\315\226\312\276Ay\007?x\241\255\275  _=&\364(>\241\366->\005\266m\275k\232\207>E\310?<\032j\217\275\267\275L=\276#\346>c\342t>\003\300\325\275\332\2439\276\337\345S=9E\231\274\247\313l\275\370\312e:\r3r\276\023\276\222<\274w^>\343\317\346=\264d\276>\rPz<.\275\233=\213\030\200\275\350/\312\276Fz\230=\247A\243>A\331%=\'\341\377>v\026\337>\325\224g=\317\222\242>\t\023\240>\344\264\261>h\311\264\275\261\234\245=\031\2170\276\302L~>\327\232\312\276\374\245E>\207\311(\276$\002r=\311\356#=\231\267\013;\233\205\025=\030\305?\276^\302$\276\t\374\025\276Q\\3\2763\032\031>\350\367+\274\320&\227\2756\020\213\276<\344\207\276\310\010\010=\333\375\266\276\025R\001>s\234.\274\377_T\276\314\243\365=\014B\217;uh*? \214\266>\3149%=_ys>\262\342\270>\027\016\323>W\237\245\275\252\354\010\277\356)\037\277\010\020\002\276\031b&\275\233\2032\277\017>\022\275\361BA\276\r\260\240\275\242\006\006\276\211\324\320\276\364w\365\276\303\177\t\277wE\211=\205\225\177<N\266\234\2762\035\317\276[\232\n=\261\317\313=PK\351\275\013\271\363\275\033=\301\273\343\300\324<?\241\'=q\373\210<\035\370\214=\264\352\331\275D^\324>\305\242\335>}\334\336\275/\245!?\313\320\035\275\266b\312<\213^\336\276\321\316$\277Jk\246\276\355\241\365\276\236\326!\277\350!\275<:^\262>?\266]\276\3319%\277\342\372\304\276\274h>\277\315\364S\276\260\266\210\276\366[\020\276j\337\365\272\"/^=\301 \205\275\tK\022\276k \212>+}\216\274E\250c\275\221.>\275\016\245\305=\035\251\221>\251\317c>\344Z\363=\353R\203>\340\332\246>\334\032\312=\277\210\264>\367I\257\275\020zw>1\277\024\276\262%\266\276\020\277\364<\271\247\032=\367\316\314\275Y\n\231\274W, >O\020\342\273\033QE\276\002z=\274js\261=\203\343t\275\007\360\254\275y5\365\275,\326\035\276!Wr>\010\250\205\276\336B\366>\253X\005\276\244=\016>\007\212S>\017\210\t>\342\214i;\227\003\276>\347\333@?\376\252d=\3729#?\223d\354>p\221\372>\224\207\016>j\177\206>3\274\257\275A\216\244>\021\334\343=\261`\316>\335A\037<t4\313>4\013N>\252\333\222>2p\264=2\024\266\274/\366\240>~\t\177>xS\237>\002\010\242\274%\266\205\276\231@\315\275g\267&>\331t\000?\377n\343>\300V\251>Dv\032?\006?\231>)ki=%9\217>OB\004?\230\027e>\035\246r\275\330\315\r>\244\222\004?>\035\360>\345`\334>:;$\277\340@\370>n\242\270>\247G\241\275\242\332n=\213\005\025\276\254\214\224\275$\001\234\275E\021\354>\350\350R\275, \245>H\314+=\275En>\022\254\306\275\347\033%\276\373J\224=,O<\276$3m\276\345\033\263\275\'\017\346>8k\202>\257s7\276\215\244\030\276\325\342,=\025\375\333>\277q\373\275Z\216\213=\226\264\317>\212\271\000\277!\213\247\275\n\347\000>l\310\374\276\201\006[\276\260\002K>y\310\000>i\307\250\275\301\374\273=\202\350[\276S\017K=\036j;=\226\204\314=0-\016\276\267}\253>\223\275+\276\356<\377=\023\r\t>O~w\275\203G\343\274x\214\245=T\3453>_\360i\276\277%\313\275\036\010\216\276\204r\215\275>H\301\275\226\026\365=\212e\222\276\017.\001\276\314\302\324=\332s\366\275\371F\362\275p\005!\277\270$\034>\220\225\341\275\372\307\357\276c\376@\276\025\232E>\351n\200=\216<\245=\023\201B>\375E\273=\237\270=?g\220>>\324\037\243<\215H\006>\317\200\204=\315\300[>\005\020!\276\333\025\271>\265\2307\276*0\264=k\311\026>t\r\320\276\363`Q\276\026g\240\275\263\343\006\276\363\232\020>\255,|>\330B\207<\332e\363=\211V\004>\212=v=*\207\225\274\335-\363=\020\242\241=9\270&\276qv\">\261\271\365\275\370.\277>\265\275\251>8^\267>T8q\275U\322\034>\212\"\021\276\367\303\214>Q\r\334=Z\265\305\275\303+\260>\334h\020\275!9a>\263\230\245\275\003\252w\276\363\262$\276\363_?\275\004\302A=y\036\335=@\201\241=\345\355\007=\333*o\273\257*{=:j\'\276$\365R>f\210\270=\202A\302\275\223M\353>G\375\004>\001\3348\276\312~\031<\324\010\350>\361\275F\276\227\t\355=\003\\:>\311\317+<#x\"\276\007w\237\276\255\027\010=b\357}\276l9k<y\267H? k1=\224\005\232\274\350\337\233=\261\332\232\275\200\341\323>oK\345=\344\256\014\277\250\371\260=\213e9?\204\367\272>\214\215\214\275\030\026A\276\357\236\016?\303H=>7\374r=\201\264\263>]\361\n\275\276\206\033?q\323\253\276/\034d\275\2404\217>\363\032t<\030\234\332=\211\246\356\275\262R\236\276\323\310W>\036t\201>\352\226\352\276\022\231\233=2[\214\276\341\200P>7\275\264\276Q\311\030>e7\256\276P\275\236=\203\240\013=\300\316\275\275\333\200\321\275\226b\241=\373A`\275\334\251\035\276\036\332\037>\200``\275\317\021\321>\346D\010>\353\303\225\276\037\223\002>\336\217\031>p L>c\323\210\275x\021\013<P\210\200>\215\333\231>\2214+?\000\301\247=\373A\231\276\207\274\235\275\313\215Z\276\313*\221\276\241\232\200\276?\365V\276\366(\223\276\323\212)\276\255.\262>\321\261\020=\310\"\211\276\035`\025\275z\371U>\233\331\317\275\324\333\022\277\305\271\306\276H\261P\277\022\351\331;\335D\031\276\216\344\262\276\0333\232>\253\322\351={5y>\022\211U>Mjf\276;\327R>8\025\035>\277G\344\275}R=\276\2211\021>\331j\376>\262\233\222\2768\245\013\277\312\271D\277\035\200=\277\0314\213\276f@]\277\231\300\222\276\261Q\231\275!t(\276N\010\002\277\204Z\210\276V\245w\276\203*M\277\\\360\002\277v\362\233>\271i\234\276\304!\362:&\360\237<c\324\005?\327\265\264<\373\'G? A\224\276\242\344\005?\204\246\013>\257\240\000>\013\253\277=M\'\016\276;\235\271=8\325,=Z^>\276\234\312\332\276=i\272=\222z\252>Az\016\276\233z\021>\355\363a>^6\216=\377\361\271\275\262j3\276\250\247\025>\217\316Y\275)\036\366\275n\033\336\2729\210\302\275\036\265\037\276\301\274\322<y\235\306\275\374\251\264\275\231\377\242\275~\347\240=E\253(\276&\334\240\275:\220\344\274\352\223\017>e\370O>T\267\376\274\334\376\021\2764tS\275\032\247\r>\351\232\024\276\022\233\374=H\302y\275K`2>\025\272\304\274\263\345\010\276<H>\275\234%\237=\377\313k\275\323\372I\275\251\346+>\313\315R\276\360\377;\276I\355A\276\225\255\030\276y2\273\275\206\336.\2752\377\177<\377\020\177\275\201M\003\2765\276g\275\357\0377=\270\n!<\004\014\243<oA\005\276\016\026\020>cw\207=\301D\313\275`\232\264=Gr\013>\367{\024>f\270\006>\327=_>\0069P=\254\266\322\274\243j\371\273\004@\032>\217\274Y\275\323\3641\275\261\221$>-\023\277=\033\203\334\274\006\330W>z\352\004\275\372\250&=\317\300<\276\037j\307\274\263e\014<\037l\033>\210.\276\275\033\363\314<f\360+\276\036\223\272\275+\335\257=1\311\374\275\037\214o\275j\351\216\273\220<\273=\354\004;>\023\211\024\276\356\265\n\276h\3067\276\262y2>\337\235\257=\262\231\325<\317\"\'\276\273\341\253\275\341\017\007>,\010\354\2753\t\037>|e\275=6\036\">S\353\321\274b$>>4\\#\276\"\334+>Bf\300=E\342\256=\275\356\">\033\275 \276\006\277\315\274\020\014+\276\'\022:>\007\031a<\363B\336\274\207\253\006\276k\005\326\275\226\241)\276y\334\253<\253~.\276\356l\223\275\356\252-\276\272\311\231=5\177\261\275\013!\264=\235\315\206\275\364\326\360=\3140\"\276(\367\026\276\275\277\037>y\273\311\275\326\244\242\275\255\276\017>\260\211\234>dA\020>a\224\264\275\"\311\010?>\017v<\337\301\002>\257>J\275\224\320\256\276\013\307\037=A\204\017;V\001\">0+*\274@\271\277\275\235Ix=\226\177\022>\024X\007=\021\017R\277L\227\217\276\317\006t>\206\301\342\275\366\274\321\276\rU!>\202\241\217=\316\017;\276d\334\232\275aoW\277]|}>AF\377\275\200\\\201\273\356\226\005=\035\302F>\311\225/=\372\350\271>XZ\306\276\024X\205\2757\262A>l!\255\274\017\r\273=\014\230\375=s\327z>\260\224\337<\2524@\276\277\215\005\276`E\324=4\244V\274c\024\263=\\\275\035\275\217\252\263=(\244\301\275$\302\260\275=n\324\274\271\201\002\277_\300\036\276\347\303\211>\3153(\276q\244\241=C\230?\276\365\340G=\231\001[=\352X\203\276\342\303\370\275\347\'u\277C\004\230>A=\022>\250RI\276z\334\004\276\314g\'\276\251\270q=\344\252\343\276\240\351\365=\177G\225<\334V\273=\223\271\237\275\201]Z\275\221\272\324\274\206\232\036<\331\030w=VL\005\276c\t\213\276\356L\213\277k\325\213=\353E\333;\2569\004\275\367\365\216>K\237\245>E\342\313\276\350\265\003?\305\332K?\031\377M\274\'\255\277>V\n\372>mr-?\271+<;\364\333\300\276R\020\316\276A\330\327\273\245/\200\276\016\202.\276\374Xs=\240%\241\276\254i\002<B\273\353>\223\245\013\276\335\233\324\276G_{>\"\226e\275\036W\303\276/\273\223\275\256\343\030\276|\334\244>\271\316\352\276\376\256\252=\006\202\233>~=\034?@H\243?\251\005\"\276\367C\025?\004S\335>\036u\264>R\031R>o\227\340\276\301\274\222>\213\330\034?\266\023\n\277\037c\023\276\262R\356\275.m]?\2531\021?\242]=?Q\034\375>\224mk\276\270$\277>U\237\033>\335\3548>\374\037\233\275\261\323\200>\332q\310=\340\314\207<\315\034\325=\372d\222=\223{{<f\242\346>\305\243f\276\\\262\021\275\317\337\032\276lc\245\275\372\305\307\275\010\026>\276\271\203\003\276\224\004\314\273+\330A\276(\001\214\276\363\357\345>\332Hi<\224\014\372>$d\230;\361\364\236>\'\231\007>\312\261\325>C/\326\2745\025\323>\267\327g>\266\346\301\275\271\212\257<9\232U=3\204\212\2768\257\202>\273\007\227\2767\370\271<\341\324(\276If#>\3326\003\276\360?\004>\364!\366\275\230\375\n\276\315X8=l\257\021>\215\263\207>yx\004>\372!!?#\316\374=\305\244Z\2763\2557>\200.W=p3b\275_\372\n=\2474\207\275\253#X\276\314)\343<\331\010\010\276\014t\202>%\341\r>s>W\275\026\356\022>Pv\260<j\250\002\274R\330\215>Y\333\365\274\3654\007\276\256\006\020\275\273m\232\275\227I\003\274\'9\026\275\317\303C\276US \276R{\325<\0249u>x\341 \2758\241\007?\352\332\021\276\364K\250\275\365\350!>\272\003S\275\347f\214=% \014\276\205\344\243\275s9\261\275\317\2177>8(K=O\306\324\276\262\037e\275\214n^?\336B\372=\263\255\'\274\315[\035>\247\305\211\274\030A8>\301\3754>\\>H>\254,\005\276\237\201\217=\001t\">\277 \302=S\321\277\274\225\375\212=\235w_\276\213\376\311\273{\362\277>\\\223\377>\330\021\353>\242\274\246>\364\205\240\275\370L)\276\006\337\314>W\277\031>\255\365\250=\245\260\010\276\234\350\327>\204\377*>{\357\232\276M*\262\276<n\005?\331\026\343=N\372)<Z\031\357\276"
      }
    }
  }
}
node {
  name: "decoder/dense_6/MatMul/ReadVariableOp"
  op: "Identity"
  input: "decoder/dense_6/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/dense_6/MatMul"
  op: "MatMul"
  input: "x"
  input: "decoder/dense_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/dense_6/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "AYL\277\245\"\365\275\'Qw>=\036\216\274m\371\345\276#8\022\274\031\217\251>\253\324[\274e\260=\277\314\217\032\277\0102\374=r\376\240>\317\274\223\274\354\354J\276qlQ>\2519\240<\257#\002<\263s\\\277\210\276\000\277\311)\001?\265h(\274\343n\246<\256?B>\016\024 >\013\301\031?\313\024\254>\3414\"\277+<\001\275\357Kv\274%\213a\274\034\025\207\274\203\204\201>\303^0\277:bv\277\353\360\251>E\252\003\277\314\340?\277\211\022\005>\017\275n\277\342\215\323>\375\367\224\277\244\2578\277\211\320?\277B~\365\276\306TT>%\301\246\276\303|\\\274\020\345\016;\346\363r\276\204\244S;\360\201e\277\250o&\276\006\347\354>6\315P=\272\365*\277;p\332\275\233\202\327\275m \307\276\301\007\362\276\235\367\343\275\314\347:>o0)\276\257)(\277S\314\207>7\213\246>\003\201\235\276\374\377b\274\252\313\363<X\037\236\276|\273\014?L:\361\275U\335G\274\262\334E\276~s8\276\307]>=J0V>^\340\215>\210\251\014\274\307\345\324\276\007\312J>}*^\2778\267\270\276!A\031\274\263l\017=\350\376\264>9\210\224>\254\233\000?U\203(\276\345\213^\277\245tL={z\274>\213\334S>eE\272\277\010\347+\277~\370\031>\2175\237<\335\226&>\235:\312\2769\371\000\277\316\257m\273\241T\366\275\035:\210\275\247\361 \275\204\271|\273\221\005I\276\227\002\233\276\341D\363>\315:-\2748\321.=jb\t?\360\354!?\\Y\"?Q\325\325=\317(s\277Q0m>\257#\207\277\203]\030\276<\224\023>\n\352M\277\217\025\036\276\274\355T>\023\315\250>\336$\302\275\240\265\334=\345P\t?c\275\372\275\332|\260\276[\324\276\276"
      }
    }
  }
}
node {
  name: "decoder/dense_6/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "decoder/dense_6/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/dense_6/BiasAdd"
  op: "BiasAdd"
  input: "decoder/dense_6/MatMul"
  input: "decoder/dense_6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/dense_6/Relu"
  op: "Relu"
  input: "decoder/dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/reshape_4/Shape"
  op: "Shape"
  input: "decoder/dense_6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/reshape_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/reshape_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/reshape_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/reshape_4/strided_slice"
  op: "StridedSlice"
  input: "decoder/reshape_4/Shape"
  input: "decoder/reshape_4/strided_slice/stack"
  input: "decoder/reshape_4/strided_slice/stack_1"
  input: "decoder/reshape_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/reshape_4/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "decoder/reshape_4/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "decoder/reshape_4/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/reshape_4/Reshape/shape"
  op: "Pack"
  input: "decoder/reshape_4/strided_slice"
  input: "decoder/reshape_4/Reshape/shape/1"
  input: "decoder/reshape_4/Reshape/shape/2"
  input: "decoder/reshape_4/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/reshape_4/Reshape"
  op: "Reshape"
  input: "decoder/dense_6/Relu"
  input: "decoder/reshape_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/Shape"
  op: "Shape"
  input: "decoder/reshape_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/strided_slice"
  op: "StridedSlice"
  input: "decoder/conv2d_transpose_8/Shape"
  input: "decoder/conv2d_transpose_8/strided_slice/stack"
  input: "decoder/conv2d_transpose_8/strided_slice/stack_1"
  input: "decoder/conv2d_transpose_8/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/stack/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/stack"
  op: "Pack"
  input: "decoder/conv2d_transpose_8/strided_slice"
  input: "decoder/conv2d_transpose_8/stack/1"
  input: "decoder/conv2d_transpose_8/stack/2"
  input: "decoder/conv2d_transpose_8/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/conv2d_transpose/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\227\307K>\301\363\324\273{\237\202>\267\242\226>\021\370<>\3257\305=w\005\t>;$p\2750\2767>\335&\210>\265\244\242>~o\017\277O\001D>x\355\020\276\250\266\311>L!?=\365R\247\276&\242J>&\317\003>|#I>\365\251<>k\024T>\247\377H\276\220\201\242\2761\201\230=\252\211\261>+\034\361\275l\212%\276\014\3603>\213\310\231>\007\230\330=~\2318\277BL\210\276\2410\362>f82\276\232v\'\276\372\310\310>\337\3222>x\247f>\210?\233=Z3\226=\264\371o?N\361I\277aa\212>CnE=\361\254\255>\346og\276\211\t6\276\271\260o=\216\256(?\223\3611\276\236^\252\276[\361c>|\375\311>\271l\245>\311\205\205\274S\371v>b\2101=\331\255\221<\036\230\000\277?U\261>\352\340f\276\264\206\006?*\203\222\276s\263\236\274<\372)>\023\274\347\274\\\330)?D\234\244</\014\267=\316\360\311\2761\370\356=\007\002o\276\254\303\026>\033\265\263\275\026W\226>c\026\246=\335\322\177\275^*\242\275LC\322\2755\324\224=\200\3239?\313:\222=^1\301\274epi>\375\333&\276M\326\310\276\211\300i\274\232\240\257\275\314i\323>\273S\304\275\203\302\236>\216Z\203\273o\351a>P\374\215\275R\2446\276\276\202w\275\364/\330>\211/\200>\251s\016\275\177\361\302=D\037\024=-\272\245<h\020\334\275\327\331\026?\005;8>\020K\215>M\250\353=\014\372%\274H\351x\276\024Y5\275% \373\275:\317{\275\377\350{\276\367\351\200\275h\353\347\276\000H\253>\323\211:=\373\r\253>w8\217=x\256{\275N\243\304;\272\371\030=w\353\236>\206\356}>\254\316P>\243\362\305=;R\335\276\203I\007\275\271\177\243=b\3664>?\213\366>\'#t<Oo\003\276\202\332W=\242\0309\274a\213=>\254#\240>G\036\340\276P\004\036?\252\315\215=Ps\277=\323\332\233\275\310\3404\276/>\261=\205\022\026?W\"1\276\210RN>\213&\035>gP\264=\361^}\2758\352_>\341\316u>\245Vh?I\232\365\276\225\272\017?\276\240)=\030\321\206<\312\363\003\2745\nE\276\nEU\275\363\277@?\354\351o\276\3056\001>\026\224\247>AI\006\276\264:\231<\200n\023>b(\'\274\315;|=\274\021\305\276-\312\276>`\231j=8\310@>\224\003G\276\r\312\233\275\021_\177\276\366&c?\373\n$\277\376\361\367=\300\352I>\335\351y\276a\024{=\000r\023\276P\340\276>\373\'p\276\022^\000\276\2601\342>wtY\275\226\270\233>\242\326b\275\247\004\336\276\033ku\275\270\202\333>J\026\026\276\332HL\276\330\367\004>\024\216{>^\252.\276g\345\237\275u\320\036\276=\320\201?\n$\266\275v\355B>\203|\027=DO\031\275\357\223\243\276y\205{>\342f\305>\2712\346\276\032\025l>\2077\275>\006{\356<\337\263\215>\354r2;f&\362=\030=f\276\002\2031>`\356E>{E\355=CQc>\253q\207=\255\306\251>\256\031\346\275\306\201\277\274\361+\324=\026\004\265<\245\031g=&a\177>\351\372:\276 \254\021\275\200\245W\276\002\307\301>.\005H?\365:\371\275\316\304\352>\247\266\025\275&q\234=\217^\216\276\225\007@=_B\344\275\032\207\371=\302\314d\276t\024>?\300D$>V\352&>\223H\216>8\016\250=F\010\225\275\022\316\213>\224\347e>\274\'`=.\307\'>\271(\227<\000\263\305\275\211\250\033>\237\t\377\274\337J\027>\272\033P=\266\005\003?\240\025!>i\271\013\276\263\017\036>L\237\025>\300\004\277\273}`\334=xNt\276\005\223\226>\0017\232\275\321\326\322>Z\315\334\276\377z\263\275NRj\275?\373\235>\323xl=}i\004?\365#\372\276p\264\307>\307\320\365\275\355\213.\276\301\311\002\276\034\247\254>\177y\002>\014A\242>\320\334o=\231\r\021>}\232\036\276\360\351\306\274\016\364\320\275R\246\320>\244\227\232\276\222\340~\275|ev\276id\235>\177\236x=\324,\205>\236\341:\276\264\036\331>\273w\274\276\037\031V<*+U=\020Y\226>&\2264\274\204\002\353:\021}\267=\303\0348?\245\247#\274W\212\020?\234\3176\277\203\003\330=8b\251>\376\200)>\374\216.\275\322\n\035?Dj6>\376=\033?\247\016m>\246\305\006?\025(\033\273;\305Y>\303\324?>f\226\326\275\227\214D>]\216\n>\264T\212\276\334\276\350\275\205\267\232>\324\005\005\276\267\0323>j\035\212>\220-\225>WU\301>\351l=>s\002W\275y\t\024>s\332\217\274\027\t\">\374\233\205=\253`1>\203\206\275=n\235\251=8\207S?g2\203\275\036g\325\275\200F\016?\252\336\320=\327\221%\277\024Z\327\275\203\322\277\274\271\017c=\037|Q>\361h\000\277bx\360>S\005\336>\177\221\261>x\\!\277e\010E\276\3103#=\3356\374\275.Oy\274\316h\360>\207\377\017>\037}\337=Ym\245=\303\214\360>\212 7\275Db\t\275\023\214\016\276E,\264>\205;Q>\r`F\276\377]\n?\346/\201\276\022K\247<\032\232<=\207\033\227>\342\010\021?\231\352V\276`;D>\250*U=Gn\206\276t\223\310\274\t\321|\276\324\352\267\274\355\"]\275\367Z\202>B\277\357\274\257\346\037\276\003\021\305=\037P\313=\307\347\335\275j\372\210>\302\376\212>\267\017\000<\n\212\361>\324.[\276\361\257\r>]\314\304=\335\242]\274\001\373\265\274\016\306\332>\347k$?qy\313=(\303\307=\234\301\t?\034\257/\276\352\233\024\276\363\260I\276T\332\220\275\3174\261\276\230\256\215\275\252\3252>\304\254\210>\324\265V>\3070\003\276\362\250\243<\246\220\301>\365?@?Z\305#>\031\311\016>>\234L\276\303\232\276=\274p\215\274\200T\300=\t\314;>\212\245\240>`\251\002?\317\307\311\274\221\021\263=\251\355\221>!\337\246\2754\300\301=\266\362k?\306\007\376\276!\r*>K\010y\277=|\320<\225&\036=\334\035\276>\343X\334\276~\374\n>\266\003o>0\214\033>\0320\">\362\2203=f\230\357\275f\301>=0A\321>\366)\212\276\016\301?>\324Sc\277Go\370>A\360\314\274\\\271\344=\363T\221<z\364\037\275\307G\202>aC\035\2763\215\276=4\303\312\275\346\"`>L\217\217>$7\036\276w\343\217<`\201\205=\"\362?>\017\372\263>\244\034\013?t\005\367\274\237&\301\275]%\037\277\252\022\222=!6;>\014Id?x?\254\276\335\300\025?\2434\007?\306\323\355\276\225\213\t\276\363\247\241\276~\250\033?\352\222\000?mo\254=\253\266\255\2769\177\372>\266P\264\276\226\301\231=\250t\256\275\203\213\351>|\273e\276udQ?\241\013\241=\233=\224\276YY\217>\243G\270\275m\371`\275\0240\256>\303c\200\2770_5?\2504r\276\272\242\327\276Be\003?j^\010?\242\030\005\277\311\204{\275\234\377\310>\341\235\000\276R\316X\275[\232\021?5\031\317=\355fo\274\206\245>\276Tq\016>\314\013N>\312{@>Q\027Y?z\350\232>\n\t;>I\237\273\276u\276\334<\270)\232>L\324\214=f1h>I,\223>\342\023\227>\267n\207\276\003\227:>D\246\346\274\264\256~\275\363*\315\276\031%\236>\243h\301\275\374\026s\276l?\234\2715&6>\214\247\014\276o\031\326\276\243\207\215\276\000\033Z\276\213\225\177>\237\004\334\276\363\267\212>gq6\276\026W\370>\340n\255>\276\244*?\213\366\237\275\025u\017\277R\337U>=\031^;\303\325*\276WU\r\276j8$\276y\212B>A\316q\276\243\356m\274{\261\216\276\025\217\354=C\257\337\2747\303\340=\304\032\342=f\336\274\275\271\266\320\276xS\300\275\257\342\024=\205\331\020\277d\261\213\276\227hc\276\263\267p\276\025\250\247=\025k\003\276\364\342\327=\305\270\263= \336y\274m\036\226\276\244 6=[\\f\276\316i\320>\n\226\241\276\242\0271>\245\375}\276\377\377\210\276\035z%>\3065\226>\362^r>l\353\006>\214\272W\274\321\310\000?\301c\365<\235\006K\274-z/\277\377\345U<w\365;\275-\301\231>\267\n\022<~\317\272<\353\234\311\276~\t\035\276\371\370\035>\377F\201\275\334\351\377\275\377\023\314>\013T\376\274\235\026\364>%\210\352\276\274\337\237>\231\233r=\244\336\010\274\374\2544>\3245\232\276\274\366\274=\204\232=<\271\253\346>\307\2724\276\353\215\265\276\227\206\022\275\330\n\365=I\247\333=\343\371\276\276\221\367\320>-\377\341=~x<\276pY\316\276R4<>\326\327\021\274\013\320~\276\277)d>\030U@\276\217\202\337\276^\244\017\275|N\265=b,N>\255\204q\275\3751\212?\267$\306\276J\035\3109\274r >\336s\253>j\207\277\275\014:\253=\227\004\304=(\351\004?=\340\362<\345\267\265=A\226<\276ev\227<\276\027\230=\035\346|\274\332H?=\363\324u>\211\371V>E+\020=Z\326\245\276{1C\276\236\207\227=7V\240>\376\206\031?Y\301\030?\034U\357\275\377uq=\352\027\254>\274\265T>r\020\024>\322L\373\276\376e\002?\220~\024>\255b\213>\347S\266>H\036\312\275\270b0<\342x\032=\024l\210>\035/\331>\332O\315=\343\271\317=j\254\311>\212S\267\276\3653\202=|\310\225>?\231\217>\2657O>\363\207T\276\363/\004\276\205v\032\275\370&\271\275\370\355U\275\207Z\271\275\024\371\362\275\206\005\004\277b\317\212>\307\300\031?\205\025\256>1tD\2767\255\315<1\377\330\275\215t\025\275\270\327\017?`\001T=\tSz\276\306\244w<QH\261\276\375\033=\276r{o>\317\273\217>\242\\1\272<\264\037\275n\327/>\342/\357\275\251\224\240=\216N\312=\254\311\">\200\337\002>^B1\275^\255\214>c\212\332>\220\266z>p&\245<y\203\3249\341\340\216<\333\002\275=i\376\321=s\334\200\275\255\2063>\314\037p<\202\357\034?\224\'\267>\034w\337<\233\025~\274\234\213\262\276\237X}\275j\017\226\275ch\334\275l\277\334\2747\305d=\313\022\242=?{_\275\343M\303\275\234;!=`\254\336>eC\331>\334!\274\274p\2606>\274\272\026>\367\316v>[\367H\276fV\272\276Fs\362>\306\301\231=d\363\210>\371\325\325=iGB>\353\n\361\275XE\221>\202u\335>\023\rF>\327\314~>\255%u\276\013\324\225>3\327\211>Q\226\005>h\215\301\275\223\246^\276\201\"~>\313\255\005<\004;n=\220\241\304=;\330\220=]\253\034\275\366l\317\276\300\3039>\354{\336\274\322I\223>bN\210>\306\233s\275}Q\313\276\310@\244\276\340\246\213>\224sh\274\360\253\214>\rC\203\276\006\0009>P\022\361\275\375\275\225=\205n3>\303-6\276\232S\227>\rDV>R\014h>p\323\262>\263\230\375>f_\254\276\253\237#\275Z\362\214>:L.?\223\304\r>\034\362\201\276.\343\035?\207\244\320\274\274y\212\276\340\032\354\276\214\302\017>\031*u>\"\200\364=\335\333\235>\177.\024?\302f\205>\322L\034>\270C\224\276<4\242\276d\303$?\312\004\316>\3666\242\275\035\245\237\276h \014?\300b\362<g\2665>\345\262-?\331\272\311>\242><?\274\310\335\276>&\001?W]\335>B\th>H\"n>gb\370=\013\001z\2756\\\236\276\330\363t;U\234X>IL`\276\334\035\326=\347l@>&\325\241>\3671\220>F\235\254\275\005\034\306\276 \240T\276\3126\240>\233\245:>\001&P\276\264F\320>\246\010\364=\232D:\276\311\000y\274\265\305\014?\010Q3>DC\025>\020\345\276\274\213S\221>>u6<\260\001\372\275\223\260\264=7\343I\276_\\\267>\265\024I\276\261\214b>\345\246F\275\001\261e=4\351\201\275\036@c=\357\315\003>\3675\263>\026\215U=\201<\215\276\232\306\366=z\205\204\275!V!<WO\215<\005\031\t?\035\313\014>#A\217>\351\227B\274\000\363\213>\250\355\261\2765\224g>\252\261.>\257\333\255>ZE\003?\010;l>l\314s\276\245\370\351>\003Y\224>\036\312\255>\341\310~=\026\374\273>N\241\317>(n\300\276}\246\252\276v;\225\2752\007\303>5e\237>R\246\300\275S\303\033>\377\344W=\001\265c\275F1\245<O\320\253=bR\264\276\306\263\324\276\007\317\027=\234\224\022=\035\310\027\276\306\324\331>\3067\014?\221P|>k\r\325>\251\307\361=\032,\300<B!O\276\366\004\210>\327-\225\276\246\300\004\276}\371\335\275\214U\364=T\241+\276\311\260\014\276\027\301\316\276*\232\272=x\363\305\275G\';>\234P\330\275\207\007~\275g\273\241\276\037\273\201\276\030\204\000\276\326\377\324>\261\260\021>\267\241`\276\243H\027=\210\000\270\276\022\366\203\275\003E\302<U\0360\276RK\216>\032\214\375\275\376\242\236\275\317\242\004?\350H\221>?G\315<\254\242P>F\323\255<\354\001w\276\374\315R>%\226p>V\234\333>\224C\016?\312\325\220>@\260\345>\313i\006\276\204\301\215=\231\3639\277\351\233\210>\331,E=\222\241\221\273\362\311H\2762\250\014\276DMA=:3\240\276\201\303\023>\t/\211\276J\264~>XI\274=)\275u<<k ?B\267\253\275b\263\312=\326\246\245>vC\027>F\263;\276\033*\010\275;\003\021>\360L\226=Q\245v\276\263\240\t\276\'\177\260>L\242\021>\362\237\306\276 \206<?\336T\021?-\346\247\274\335*}=\200\344X>o6\036=\360fQ\276z\362&>\261\314\032?\001#\025\276\224F\312>\242\303p\277X_\352\276\261\035$\276\272\032\233\276x\013\343\276\003t\214\276\301\177\352>\020\314\375\276\247\034e\2760K\214\276 y\006<.x\r>3=U\276\250z\233\277\2363d=\265\016%\274R\244\216\275\266\256\006\276u\222\326\275d\273\252=\n\023\032\277\tf\341>\350\255\206\276\235g\364=\206L\236\276{/!>G\306\001>:[\211\276\310\351\210\276\251\235\336\276\310|\304>\233\263\207>M8|=p\037\212<\022^\014>\207\230\010?\275K/>\377|+?\021\331\202\276\204\027\242>\367\314\023\276\224y8>\213\247\243\274#\200\025\276\226\t\003\276Tf\322=\346{\300\275\0353\227>?\027\307\275D\303\002\276H;C\276\365S\300>\205\214 ?\211\303&?\254\020<>d\353\241\275\024\377\014\273\311I\247>^\355\241\276R>\213>\267\250\'\276\333~\202\276\326\361\020>\274\227\326\276j\345R>\025\035\213>5\232\317<\277\2053\2757E\375\276\216h9\275}x\320>\017g\031>(\343\352\275\023\337\200\275\215\230\350\275\351\372*\276x\326\223\276\370\323U=\3114\266>\020\237\004?\301C\337=\312\316\307=W\264\002\275\220W\004?\226\007^;\216\302\"\275vs\275>\263\254\231>\001\241\006\275\333oU\275\005a\333>8E\000?u`\000?\227\025Y>\344\344m>\317\366\245=7h\204>\272}\211=\200\203\025>\334\021\213\275Y`\314=^w\212>R\223\244;\217\n\272>\221\374{>\325`@\275[\"\345\275\344m/\276\241\027\307\274`^5=X\373\261\275\022\333J=\345Kr\2765\354f\276\013\375\205=P\273(?\360\365\356\275\362i\213\275\326u\275;\214\225\302>\211\331\214=:\213\337>\010\243z\277\324\002\270\276\232\326\016?\207\334\355>\200\013\221>\227\341\n\276\035\372\361>\365\003\351>\002\022\261=\321\262o>\306R\">\206\234\251=\246\270F\275*\361\247>\351\305s<\264$%\276\t\230\261>\270\260\233>\003\361/\274\271O\340>\004^\331\276\r\335\037>\025x\304=\200\316\026\277\200\330W>\\\007L=;$\245\276\'L\235\275\204\266\022\277:p\017\277\213w\340\276\2326|\277+\005\000>$v\210>tT\n?r\231g\276\007\366\007\275\ta\325\275\270\325\310\271\357\020\302:\230\322\224<^N0\276\373@\367>\350O%\2762\337t\276\316\023\322\276WE\233=]\020\027\2776\333\255<\357\312\017\277\253l\243\276G\362V\276\322\236\t\276X\342\215=\260,\177\275\325\372\026\277.C|\276\351\275h=k\203\004>Ep\252>>P\005\276\ri;\275s\363\357\276.\013\206=%*\322\276\361~\023=\204>\316=&6\361\276aZ\336\275\226a\275>4\'K\276_e\032?\261\327\277\276\237\203N>l3\315>\345\255\275>\370F\351\275,F\237>%)\231\275\033\345\201\2767\271P>4L\214\276\277\375J<~\240\r?\237\252I\275p7\n>\3575\323\276X\244\372\274gS\300\276\373\267Y\277\2601\t\276\020\222\265\275H\311$?Sx\344\275\277Y\325;\031\022\n?\270X\316\276\216.+\274\3456\354=\377\233\310>{G\240\275\267\371\247<\241\\\212\276\365\334\336\276\371\336\244\276s\344t\276\001\222\243>\340\324\355>G\357\033\276g\322\000?\306c`\275\032l\243>\033\321\223=e\366|>\177X\007\277A\036\271==~I\276\330\207s>s\234Z<\005R\246=R<6\277\032\331\355\276I\300\036>5Dp<\t}\035<K\356\333>\375\027=\276A\236`\276\365\251\261=\022\307\230>\205\305\263>\000\211\203\275\223Q\245>\035\222\264>#4\252>\215\330(?{\232 \277P\331\210\274\236\266\231<\033\370N>\n\3770>\001\326\237\275X\'\357=a\023\220\2752#\356\276\375\r\001\277\311\312\201\273\014\242\366\276\311\364v=\203\033j\276.Z\214\273d\212\237=\274\367\365>\336{\036\276\302\232\260\2764\3770\276Rw\215>\243\217\234?\326\004n\276\016\221\340\276W\266(>\'\013\361\276\031\242A\275s\325N>|\'I\277M\240\016\276\253\2169>w\353\023\277\330\3113\277\312\342\277>\343J\234\276\037\030\215>Mk\303<\202\364\335\275\211\273\241<\030O\241\274\312C\265>\264\017I>>N\237\276q\320\347\276\320\362W>E2\321\273]\374R>\270\352\244\275\"\025\037>?\324\321>{7:\277\377\362C\276W\346\213>\304\204%>\344ci=\010\033\272\276\221\207Q\274XB\307>/\322\361=\024\030\227\276\221\221\247>\3700\211\275M+D>\375\267\247<Y\030P>\357F1?\033\224)\277\010\326\234\276\334b\214>\251\033\002>\3706\310=\212Ni\276\332\027u>\266\333\267>\000\021T>\322\260@\277p\256\317\2768\262\036\274\022\3571>1&\n?bH\242>\223\316\n\276Q\205e\274\306\003e\276\266\261\002\276{\"\324<\365\311d;d\254\230>\006\030l>\375N\245=#F\206\276\341\371\310=z\306\223>\005\3247>\300\203\010>\337\3629\2760\230\224>P9\232>K\3507>\250\306\241\275\264O/\276\230\"\210\275\246\2760\2766\220\275>y\264M>\343R\365\276\371\001\210\276\034C\340=\200\237\276\275\tm\316=\321\301\233=8U\200\275\356\246%<T\266\232>\351\355\236=Q\024\362\275\231\331\030\273\214Y\341\274-y\214=\343+q\276\242\247\305\275wFw>\270\257\202>\202`\301\275\255\036G\274\234\254\222>\367:\232>\222\337\367\274T?v\275\265\240\333>\313\366\025\277.\337P\275\364p\302=\335X\256>\002\002y>=\235\374\275\234\335\004=)p<>\n\244\017>a\004-\276\205)\265\276\252*\322=\362\315\021>\203{\226\275\033\372\242>\306ml\276\203\365\207<Q\237\345>\332:\203=\314\001\332>q\002\314>\216)\334\275\306\272\236>v\001*>!\255u\276\352\324\325\276\255\030\203>x\177\335=\'>\224\275A1\330=*\226d=\313\205\003\276\"]\275>\230/\003>\253\210\020>\035\302\234>\330ww>mrH\275\360u\206>\006\240\030?\2257\262>t>y\276\263\266n\275c\336q>\333\366\357\274ST\024>#f=\276\024\300T=a\310\207\275\243\376k;_\345t\2769z\'>\355\nV>:\271l>\363c\004\276\230\341\275\275%\014\360=M<\017\277\271N<\276\335:\377=qLA\276\214z\347=\241:\034>\031\211 >6/\225\275x\211-\276\267\026\034\277\203\344F\274\241\026Q\276\366\r\276\274\3531\301\275\204\241\306>\264|\023>_2\366=\241 \374\275\262?)\275\330\213\035>\000\362\020<>|\000\276\010\347\036\277\320\257d>\264p\232=\340f\004\277\177\364\301>H|\310=Q\306\216>\211~\304>c\321F\276F2\245\276\023\007\022\277\261()\2761\237\211\276\010\330\036\276\200{\010<\264I\205=\260\333\273>\225\246b>\026\024\303<t\210\237<\205\366\276=d\335k>k\361\252\276\002\326|\276\361?#\277\336\212o>\304j\202\275~\254u=y\305\003\2764\021\271\275\036\342y\277\237e\224=\264\232\224\276|\006H\276\r\222\244\274\306(6>\006\331S>M\373\027>p\032j\275B\354\n\2774\265\334\276\316\236N>/\200\235\275e\256\036>\204\201\026>W\363O\274\005\316t\276\'\370A<\360i\341>\332\357\027?\370\006\210\274\323\264M\275\201U\334\276\233\241\203\275]\'\221\277\224\361_<\263\210&=\254\245\036\274K\024S\276a\353\"\277\202A5=\266i\235=T\237%\276\202\375\216>,{\254=\177\245\256>\024\222\200\276L::=\220\316\344=\334\027\325\275B\363\252\276\312\323\\\276\272\035\226>\214\310\252>\272c\212\276U7\000>\t#\000>\350\226\376=ns\235\274\252\007\264;\256\1778>\005\260\271>\375\323\237\276\271\205\353\274&TW\276/\224-\275\362\316\"\277\037\'\232\276/\324Q=\271X\003>+\262\217=\301\364\331\2769\331\020\2770\275\355\275\313h\216\277\023\204\240>\003\311\n\277\000=\317;\203\371\267;\214\326\236<\037\t\207\276\005 \036?q|\004\277\253?\224>\261\211\026=\266\331\250>\251nQ>\005P\257\276 \014\324\275\256\275\036\276\374g\213\277\tv\206>\304G\'<3\\z\276w\370]>\212#\273\275\263;H\276\300q\201\275\002\333\013\277\3046\336\276\370\276\014;\010h\373\276;\342\261\276\301.Y>\203+Z\275\323`\303\275\346?\210=\n<\201>$\320,\276v\236\274>\037|\267=\010%\225>5\2667=LuZ>\020+i\276a\3451>\016<\204\275\302\234\034\276K\016\027\2752\324\000>\245\357\356\275\005\343\237;\025\177\021\274[)\037=\252\035\220\276"
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/conv2d_transpose/ReadVariableOp"
  op: "Identity"
  input: "decoder/conv2d_transpose_8/conv2d_transpose/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "decoder/conv2d_transpose_8/stack"
  input: "decoder/conv2d_transpose_8/conv2d_transpose/ReadVariableOp"
  input: "decoder/reshape_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "=\014\027\274`\251\243=\320\367\212\276\225\225\017\276R^H\275d=Z=\016\336\365\276J\213\004>"
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "decoder/conv2d_transpose_8/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/BiasAdd"
  op: "BiasAdd"
  input: "decoder/conv2d_transpose_8/conv2d_transpose"
  input: "decoder/conv2d_transpose_8/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/conv2d_transpose_8/Relu"
  op: "Relu"
  input: "decoder/conv2d_transpose_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/Shape"
  op: "Shape"
  input: "decoder/conv2d_transpose_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/strided_slice"
  op: "StridedSlice"
  input: "decoder/conv2d_transpose_9/Shape"
  input: "decoder/conv2d_transpose_9/strided_slice/stack"
  input: "decoder/conv2d_transpose_9/strided_slice/stack_1"
  input: "decoder/conv2d_transpose_9/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/stack/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/stack"
  op: "Pack"
  input: "decoder/conv2d_transpose_9/strided_slice"
  input: "decoder/conv2d_transpose_9/stack/1"
  input: "decoder/conv2d_transpose_9/stack/2"
  input: "decoder/conv2d_transpose_9/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/conv2d_transpose/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\352\350\026?\025\201\252>6> >ZVl>BJ==/\034\177\276\212\002\363>\316^\201\276\330\264\365=[\230\272\276\001\033\341\275\200\307C\276\r\214@\277\314T\207>O\023%>Z\343g\276\305\310\200>rT\346=j\274C\277$\355\035\277\231\274\r>\321u\034?\335\022U>\027\333\035\276u!6\276\211\003\224>l\363\215\276\257\207\314\276\260\323|\276W\221\014\277i4\356>9\016O=\355Ly\276\304g\371;aO\343\2763\353N>=\261\255=:W\031\276N{\306>\275\250p\276\320r`>1\031=\277T?\353>^\'\210>\021l\200\276\032\022\034>\373\031$\276\204\373\246>\352\277\204>\331\036\345\276\255V\004\277\364\355\301\276?&\367\276\023\307\222=\000\277\303\276\3140\302\276\372\002G\275kOO\277bn\304\276\320\017\346\276\037\277\212=\212\322\013\276\006\013\300\276\231\322\317>U\021d>^\360\020=:\321\033\277_\261W\276F\260\244>Wr\213=\335\177\313>\004\245%>n\034r\276Xk\271=\212\002\310\276v}\246\275P\202\374\275c\353\014>\237\035\347>\305\356\267\275\247$\261\275\235h\226\276\024\025_>n\346\246\276x7f\277\237\303\224>Z\246\215\276M\310\201\276\207(\361>\224\377\241\276\211:Z>\177\177>\277>fg\276\266\353\317\276\t\353\001\277\263<\224\275\002\0327\276\325*\334\276[\220\016\277\3053\333;\311\323\375\276\251\262\242\276\223\030f\276#g\265>\365Q\264\276v\275\275\276\234\033\357\274\033U6\276s0\254>N\334Z\276\327\354\002?\255\311J\276]\303\276\275\234O`\276\254\014D<G~q\273\222\215\r\275x\016L\276\222\330\377=)U\202>\222+\023\277\'\001\322=\231\260\035\276\343\312g>V\243\324\275q\032\235\275\017\250\301>\027=\217\276X]C>\002\177\325\276\334\035\'=\324U\201>\272\324\377\276f/\030?`\2648>\263\250\274>\313\264O\276\317\341e\276\271\273\370\276\366dO>\361$c>\330\377\303>gN\232\276\302\345\207>\366\005\354\276\217\026\325\274%\371\365\275\002\246\220\274\326(\034\2742\233\005\276\312\257\035?\221\320\020\276\036\261p>\3707\306\275\321\301\200=\340\371h:)\304\270=\366(x<\266\377\253=\004\030<>\217\257m\276&\243\243\276\207\216\002>aW\236\275T\320G=zX\026\276j\0053?>\233\257\276}\353\312\276f\024\307\275xB\265>\325b\256\275^R\261<4\365\366\274\030\224\024>\205\315\342\276\323\206\007\277\362\362K\275\214w\230>\330*\332=9\306\250\274\000\203\276<s\002\262\275R\217\233>\3636\037\276\354F<\275W\212a>\301!\355\275\261_\005\276\0106\327\274\3441\301=~}\241=\327\360\307=\362\262\330\275\251\312\246<\357\337\037\275l\033n\273\3421_>)\224\214\276\003Z\350>"
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/conv2d_transpose/ReadVariableOp"
  op: "Identity"
  input: "decoder/conv2d_transpose_9/conv2d_transpose/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "decoder/conv2d_transpose_9/stack"
  input: "decoder/conv2d_transpose_9/conv2d_transpose/ReadVariableOp"
  input: "decoder/conv2d_transpose_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: -0.14324995875358582
      }
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "decoder/conv2d_transpose_9/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/conv2d_transpose_9/BiasAdd"
  op: "BiasAdd"
  input: "decoder/conv2d_transpose_9/conv2d_transpose"
  input: "decoder/conv2d_transpose_9/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/decoder_output/Sigmoid"
  op: "Sigmoid"
  input: "decoder/conv2d_transpose_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^decoder/conv2d_transpose_8/BiasAdd/ReadVariableOp"
  input: "^decoder/conv2d_transpose_8/conv2d_transpose/ReadVariableOp"
  input: "^decoder/conv2d_transpose_9/BiasAdd/ReadVariableOp"
  input: "^decoder/conv2d_transpose_9/conv2d_transpose/ReadVariableOp"
  input: "^decoder/dense_6/BiasAdd/ReadVariableOp"
  input: "^decoder/dense_6/MatMul/ReadVariableOp"
  attr {
    key: "_acd_function_control_output"
    value {
      b: true
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "decoder/decoder_output/Sigmoid"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 1087
}
